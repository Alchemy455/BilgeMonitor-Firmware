
BilgeMonitor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000900  00000994  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000900  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000be  00800112  00800112  000009a6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000280  00000000  00000000  00000a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007140  00000000  00000000  00000c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000160b  00000000  00000000  00007dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014f0  00000000  00000000  000093e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000076c  00000000  00000000  0000a8d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000202d  00000000  00000000  0000b040  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000025fe  00000000  00000000  0000d06d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000250  00000000  00000000  0000f66b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__vector_11>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 63 03 	jmp	0x6c6	; 0x6c6 <__vector_16>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 b4 02 	jmp	0x568	; 0x568 <__vector_18>
  4c:	0c 94 e6 02 	jmp	0x5cc	; 0x5cc <__vector_19>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__ctors_start>:
  68:	0c 03       	fmul	r16, r20

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	e0 e0       	ldi	r30, 0x00	; 0
  7e:	f9 e0       	ldi	r31, 0x09	; 9
  80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
  82:	05 90       	lpm	r0, Z+
  84:	0d 92       	st	X+, r0
  86:	a2 31       	cpi	r26, 0x12	; 18
  88:	b1 07       	cpc	r27, r17
  8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
  8c:	21 e0       	ldi	r18, 0x01	; 1
  8e:	a2 e1       	ldi	r26, 0x12	; 18
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
  94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
  96:	a0 3d       	cpi	r26, 0xD0	; 208
  98:	b2 07       	cpc	r27, r18
  9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
  9c:	10 e0       	ldi	r17, 0x00	; 0
  9e:	c5 e3       	ldi	r28, 0x35	; 53
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
  a4:	21 97       	sbiw	r28, 0x01	; 1
  a6:	fe 01       	movw	r30, r28
  a8:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__tablejump2__>
  ac:	c4 33       	cpi	r28, 0x34	; 52
  ae:	d1 07       	cpc	r29, r17
  b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
  b2:	0e 94 66 01 	call	0x2cc	; 0x2cc <main>
  b6:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <__vector_11>:
}

uint32_t cyclicBilgeTimerDelay(uint8_t hours){
	uint32_t milliseconds = (3600000 * hours);
	return milliseconds;
}
  be:	1f 92       	push	r1
  c0:	0f 92       	push	r0
  c2:	0f b6       	in	r0, 0x3f	; 63
  c4:	0f 92       	push	r0
  c6:	11 24       	eor	r1, r1
  c8:	4f 93       	push	r20
  ca:	5f 93       	push	r21
  cc:	6f 93       	push	r22
  ce:	7f 93       	push	r23
  d0:	8f 93       	push	r24
  d2:	9f 93       	push	r25
  d4:	af 93       	push	r26
  d6:	bf 93       	push	r27
  d8:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <secondsCount>
  dc:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <secondsCount+0x1>
  e0:	a0 91 15 01 	lds	r26, 0x0115	; 0x800115 <secondsCount+0x2>
  e4:	b0 91 16 01 	lds	r27, 0x0116	; 0x800116 <secondsCount+0x3>
  e8:	01 96       	adiw	r24, 0x01	; 1
  ea:	a1 1d       	adc	r26, r1
  ec:	b1 1d       	adc	r27, r1
  ee:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <secondsCount>
  f2:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <secondsCount+0x1>
  f6:	a0 93 15 01 	sts	0x0115, r26	; 0x800115 <secondsCount+0x2>
  fa:	b0 93 16 01 	sts	0x0116, r27	; 0x800116 <secondsCount+0x3>
  fe:	40 91 13 01 	lds	r20, 0x0113	; 0x800113 <secondsCount>
 102:	50 91 14 01 	lds	r21, 0x0114	; 0x800114 <secondsCount+0x1>
 106:	60 91 15 01 	lds	r22, 0x0115	; 0x800115 <secondsCount+0x2>
 10a:	70 91 16 01 	lds	r23, 0x0116	; 0x800116 <secondsCount+0x3>
 10e:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	a0 e0       	ldi	r26, 0x00	; 0
 116:	b0 e0       	ldi	r27, 0x00	; 0
 118:	48 17       	cp	r20, r24
 11a:	59 07       	cpc	r21, r25
 11c:	6a 07       	cpc	r22, r26
 11e:	7b 07       	cpc	r23, r27
 120:	f8 f0       	brcs	.+62     	; 0x160 <__vector_11+0xa2>
 122:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <secondsCount>
 126:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <secondsCount+0x1>
 12a:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <secondsCount+0x2>
 12e:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <secondsCount+0x3>
 132:	54 9a       	sbi	0x0a, 4	; 10
 134:	5c 98       	cbi	0x0b, 4	; 11
 136:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <currentTime>
 13a:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <currentTime+0x1>
 13e:	a0 91 19 01 	lds	r26, 0x0119	; 0x800119 <currentTime+0x2>
 142:	b0 91 1a 01 	lds	r27, 0x011A	; 0x80011a <currentTime+0x3>
 146:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <bilgeEndTime>
 14a:	90 93 1c 01 	sts	0x011C, r25	; 0x80011c <bilgeEndTime+0x1>
 14e:	a0 93 1d 01 	sts	0x011D, r26	; 0x80011d <bilgeEndTime+0x2>
 152:	b0 93 1e 01 	sts	0x011E, r27	; 0x80011e <bilgeEndTime+0x3>
 156:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 15a:	8d 7f       	andi	r24, 0xFD	; 253
 15c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 160:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 164:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 168:	bf 91       	pop	r27
 16a:	af 91       	pop	r26
 16c:	9f 91       	pop	r25
 16e:	8f 91       	pop	r24
 170:	7f 91       	pop	r23
 172:	6f 91       	pop	r22
 174:	5f 91       	pop	r21
 176:	4f 91       	pop	r20
 178:	0f 90       	pop	r0
 17a:	0f be       	out	0x3f, r0	; 63
 17c:	0f 90       	pop	r0
 17e:	1f 90       	pop	r1
 180:	18 95       	reti

00000182 <_Z10readInputsv>:
 182:	89 b1       	in	r24, 0x09	; 9
 184:	82 fb       	bst	r24, 2
 186:	88 27       	eor	r24, r24
 188:	80 f9       	bld	r24, 0
 18a:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <mainFloatSwitchState>
 18e:	89 b1       	in	r24, 0x09	; 9
 190:	83 fb       	bst	r24, 3
 192:	88 27       	eor	r24, r24
 194:	80 f9       	bld	r24, 0
 196:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <highFloatSwitchState>
 19a:	83 b1       	in	r24, 0x03	; 3
 19c:	81 70       	andi	r24, 0x01	; 1
 19e:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <manualBilgeSwitchState>
 1a2:	08 95       	ret

000001a4 <_Z13bilgeOffDelayh>:

void bilgeOffDelay(uint8_t bilgeDelaySeconds){
	bilgeCountdownSeconds = bilgeDelaySeconds;
 1a4:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
	TCNT1 = 0;					// reset timer value to 0
 1a8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1ac:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	sbi(TIMSK1, OCIE1A);		// ENABLE timer compare interrupt for bilge on delay
 1b0:	ef e6       	ldi	r30, 0x6F	; 111
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	82 60       	ori	r24, 0x02	; 2
 1b8:	80 83       	st	Z, r24
 1ba:	08 95       	ret

000001bc <_Z16runBilgeManuallyv>:
	manualBilgeSwitchState = READ_MANUAL_BILGE_SWITCH();
}

void runBilgeManually(void){
	//RUN BILGE MANUALLY
	if(manualBilgeSwitchState == ACTIVE){
 1bc:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <manualBilgeSwitchState>
 1c0:	81 11       	cpse	r24, r1
 1c2:	10 c0       	rjmp	.+32     	; 0x1e4 <_Z16runBilgeManuallyv+0x28>
		delay(50);									//for debounce
 1c4:	62 e3       	ldi	r22, 0x32	; 50
 1c6:	70 e0       	ldi	r23, 0x00	; 0
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	0e 94 de 03 	call	0x7bc	; 0x7bc <delay>
		while(manualBilgeSwitchState == ACTIVE){
 1d0:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <manualBilgeSwitchState>
 1d4:	81 11       	cpse	r24, r1
 1d6:	03 c0       	rjmp	.+6      	; 0x1de <_Z16runBilgeManuallyv+0x22>
			BILGE_ON();
 1d8:	54 9a       	sbi	0x0a, 4	; 10
 1da:	5c 9a       	sbi	0x0b, 4	; 11
 1dc:	f9 cf       	rjmp	.-14     	; 0x1d0 <_Z16runBilgeManuallyv+0x14>
		}
		bilgeOffDelay(0);
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <_Z13bilgeOffDelayh>
 1e4:	08 95       	ret

000001e6 <_Z21runBilgeAutomaticallyv>:
	}
}

void runBilgeAutomatically(void){
	//RUN BILGE AUTOMATICALLY
	if(mainFloatSwitchState == ACTIVE){
 1e6:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <mainFloatSwitchState>
 1ea:	81 11       	cpse	r24, r1
 1ec:	2a c0       	rjmp	.+84     	; 0x242 <_Z21runBilgeAutomaticallyv+0x5c>
		delay(50);									//for debounce
 1ee:	62 e3       	ldi	r22, 0x32	; 50
 1f0:	70 e0       	ldi	r23, 0x00	; 0
 1f2:	80 e0       	ldi	r24, 0x00	; 0
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	0e 94 de 03 	call	0x7bc	; 0x7bc <delay>
		mainFloatSwitchTrippedTime = millis();
 1fa:	0e 94 ad 03 	call	0x75a	; 0x75a <millis>
 1fe:	60 93 23 01 	sts	0x0123, r22	; 0x800123 <mainFloatSwitchTrippedTime>
 202:	70 93 24 01 	sts	0x0124, r23	; 0x800124 <mainFloatSwitchTrippedTime+0x1>
 206:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <mainFloatSwitchTrippedTime+0x2>
 20a:	90 93 26 01 	sts	0x0126, r25	; 0x800126 <mainFloatSwitchTrippedTime+0x3>
		while(mainFloatSwitchState == ACTIVE){
 20e:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <mainFloatSwitchState>
 212:	81 11       	cpse	r24, r1
 214:	13 c0       	rjmp	.+38     	; 0x23c <_Z21runBilgeAutomaticallyv+0x56>
			BILGE_ON();
 216:	54 9a       	sbi	0x0a, 4	; 10
 218:	5c 9a       	sbi	0x0b, 4	; 11
			mainFloatSwitchState = READ_MAIN_FLOAT_SWITCH();
 21a:	89 b1       	in	r24, 0x09	; 9
 21c:	82 fb       	bst	r24, 2
 21e:	88 27       	eor	r24, r24
 220:	80 f9       	bld	r24, 0
 222:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <mainFloatSwitchState>
			mainFloatSwitchClearedTime = millis();
 226:	0e 94 ad 03 	call	0x75a	; 0x75a <millis>
 22a:	60 93 1f 01 	sts	0x011F, r22	; 0x80011f <mainFloatSwitchClearedTime>
 22e:	70 93 20 01 	sts	0x0120, r23	; 0x800120 <mainFloatSwitchClearedTime+0x1>
 232:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <mainFloatSwitchClearedTime+0x2>
 236:	90 93 22 01 	sts	0x0122, r25	; 0x800122 <mainFloatSwitchClearedTime+0x3>
 23a:	e9 cf       	rjmp	.-46     	; 0x20e <_Z21runBilgeAutomaticallyv+0x28>
		}
		bilgeOffDelay(60);
 23c:	8c e3       	ldi	r24, 0x3C	; 60
 23e:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <_Z13bilgeOffDelayh>
 242:	08 95       	ret

00000244 <_Z18runBilgeCyclicallyv>:
	}
}

void runBilgeCyclically(void){
	//RUN BILGE CYCLICALLY
	if((currentTime - bilgeEndTime) >= cyclicBilgeTimerDelay(2)){
 244:	40 91 1b 01 	lds	r20, 0x011B	; 0x80011b <bilgeEndTime>
 248:	50 91 1c 01 	lds	r21, 0x011C	; 0x80011c <bilgeEndTime+0x1>
 24c:	60 91 1d 01 	lds	r22, 0x011D	; 0x80011d <bilgeEndTime+0x2>
 250:	70 91 1e 01 	lds	r23, 0x011E	; 0x80011e <bilgeEndTime+0x3>
 254:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <currentTime>
 258:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <currentTime+0x1>
 25c:	a0 91 19 01 	lds	r26, 0x0119	; 0x800119 <currentTime+0x2>
 260:	b0 91 1a 01 	lds	r27, 0x011A	; 0x80011a <currentTime+0x3>
 264:	84 1b       	sub	r24, r20
 266:	95 0b       	sbc	r25, r21
 268:	a6 0b       	sbc	r26, r22
 26a:	b7 0b       	sbc	r27, r23
 26c:	81 15       	cp	r24, r1
 26e:	9d 4d       	sbci	r25, 0xDD	; 221
 270:	ad 46       	sbci	r26, 0x6D	; 109
 272:	b1 05       	cpc	r27, r1
 274:	28 f0       	brcs	.+10     	; 0x280 <_Z18runBilgeCyclicallyv+0x3c>
		BILGE_ON();
 276:	54 9a       	sbi	0x0a, 4	; 10
 278:	5c 9a       	sbi	0x0b, 4	; 11
		bilgeOffDelay(30);
 27a:	8e e1       	ldi	r24, 0x1E	; 30
 27c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <_Z13bilgeOffDelayh>
 280:	08 95       	ret

00000282 <_Z16initializeTimersv>:
	sbi(TIMSK1, OCIE1A);		// ENABLE timer compare interrupt for bilge on delay
}

void initializeTimers(void){
	/*SETUP TIMER FOR BILGE OFF DELAY*/
	cli();
 282:	f8 94       	cli
	TCCR1A = 0;					// clear timer mode register 1A
 284:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = 0;					// clear timer mode register 1B
 288:	e1 e8       	ldi	r30, 0x81	; 129
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	10 82       	st	Z, r1
	TCNT1  = 0;					// reset timer value to 0
 28e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 292:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	OCR1A = 15625;				// compare match register
 296:	89 e0       	ldi	r24, 0x09	; 9
 298:	9d e3       	ldi	r25, 0x3D	; 61
 29a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 29e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	sbi(TCCR1B, WGM12);			// CTC mode
 2a2:	80 81       	ld	r24, Z
 2a4:	88 60       	ori	r24, 0x08	; 8
 2a6:	80 83       	st	Z, r24
	sbi(TCCR1B, CS12);			// prescaler
 2a8:	80 81       	ld	r24, Z
 2aa:	84 60       	ori	r24, 0x04	; 4
 2ac:	80 83       	st	Z, r24
	cbi(TCCR1B, CS11);			// prescaler
 2ae:	80 81       	ld	r24, Z
 2b0:	8d 7f       	andi	r24, 0xFD	; 253
 2b2:	80 83       	st	Z, r24
	sbi(TCCR1B, CS10);			// Prescaler
 2b4:	80 81       	ld	r24, Z
 2b6:	81 60       	ori	r24, 0x01	; 1
 2b8:	80 83       	st	Z, r24
	
	//sbi(TIMSK1, OCIE1A);		// ENABLE timer compare interrupt
	sei();
 2ba:	78 94       	sei
 2bc:	08 95       	ret

000002be <_Z10pinsConfigv>:

}

void pinsConfig(void){
		//set main float switch pin to input pullup
		cbi(DDRD, PORTD2);
 2be:	52 98       	cbi	0x0a, 2	; 10
		sbi(PORTD,PORTD2);
 2c0:	5a 9a       	sbi	0x0b, 2	; 11
		
		//set high water float switch pin to input pullup
		cbi(DDRD, PORTD3);
 2c2:	53 98       	cbi	0x0a, 3	; 10
		sbi(PORTD,PORTD3);
 2c4:	5b 9a       	sbi	0x0b, 3	; 11
		
		//set manual bilge switch pin to input pullup
		cbi(DDRB, PORTB0);
 2c6:	20 98       	cbi	0x04, 0	; 4
		sbi(PORTB,PORTB0);
 2c8:	28 9a       	sbi	0x05, 0	; 5
 2ca:	08 95       	ret

000002cc <main>:
}


int main(void){ 

	init();
 2cc:	0e 94 1a 04 	call	0x834	; 0x834 <init>
	initializeTimers();
 2d0:	0e 94 41 01 	call	0x282	; 0x282 <_Z16initializeTimersv>
	pinsConfig();
 2d4:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z10pinsConfigv>
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
 2d8:	26 e0       	ldi	r18, 0x06	; 6
 2da:	40 e0       	ldi	r20, 0x00	; 0
 2dc:	52 ec       	ldi	r21, 0xC2	; 194
 2de:	61 e0       	ldi	r22, 0x01	; 1
 2e0:	70 e0       	ldi	r23, 0x00	; 0
 2e2:	8a e2       	ldi	r24, 0x2A	; 42
 2e4:	91 e0       	ldi	r25, 0x01	; 1
 2e6:	0e 94 4f 02 	call	0x49e	; 0x49e <_ZN14HardwareSerial5beginEmh>
	Serial.begin(115200);
	
	while(1){

		currentTime = millis();
 2ea:	0e 94 ad 03 	call	0x75a	; 0x75a <millis>
 2ee:	60 93 17 01 	sts	0x0117, r22	; 0x800117 <currentTime>
 2f2:	70 93 18 01 	sts	0x0118, r23	; 0x800118 <currentTime+0x1>
 2f6:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <currentTime+0x2>
 2fa:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <currentTime+0x3>
		readInputs();
 2fe:	0e 94 c1 00 	call	0x182	; 0x182 <_Z10readInputsv>
		runBilgeManually();
 302:	0e 94 de 00 	call	0x1bc	; 0x1bc <_Z16runBilgeManuallyv>
		runBilgeAutomatically();
 306:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_Z21runBilgeAutomaticallyv>
		runBilgeCyclically();	
 30a:	0e 94 22 01 	call	0x244	; 0x244 <_Z18runBilgeCyclicallyv>
 30e:	ed cf       	rjmp	.-38     	; 0x2ea <main+0x1e>

00000310 <_ZN14HardwareSerial9availableEv>:
 310:	fc 01       	movw	r30, r24
 312:	91 8d       	ldd	r25, Z+25	; 0x19
 314:	22 8d       	ldd	r18, Z+26	; 0x1a
 316:	89 2f       	mov	r24, r25
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	80 5c       	subi	r24, 0xC0	; 192
 31c:	9f 4f       	sbci	r25, 0xFF	; 255
 31e:	82 1b       	sub	r24, r18
 320:	91 09       	sbc	r25, r1
 322:	8f 73       	andi	r24, 0x3F	; 63
 324:	99 27       	eor	r25, r25
 326:	08 95       	ret

00000328 <_ZN14HardwareSerial4peekEv>:
 328:	fc 01       	movw	r30, r24
 32a:	91 8d       	ldd	r25, Z+25	; 0x19
 32c:	82 8d       	ldd	r24, Z+26	; 0x1a
 32e:	98 17       	cp	r25, r24
 330:	31 f0       	breq	.+12     	; 0x33e <_ZN14HardwareSerial4peekEv+0x16>
 332:	82 8d       	ldd	r24, Z+26	; 0x1a
 334:	e8 0f       	add	r30, r24
 336:	f1 1d       	adc	r31, r1
 338:	85 8d       	ldd	r24, Z+29	; 0x1d
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	08 95       	ret
 33e:	8f ef       	ldi	r24, 0xFF	; 255
 340:	9f ef       	ldi	r25, 0xFF	; 255
 342:	08 95       	ret

00000344 <_ZN14HardwareSerial4readEv>:
 344:	fc 01       	movw	r30, r24
 346:	91 8d       	ldd	r25, Z+25	; 0x19
 348:	82 8d       	ldd	r24, Z+26	; 0x1a
 34a:	98 17       	cp	r25, r24
 34c:	61 f0       	breq	.+24     	; 0x366 <_ZN14HardwareSerial4readEv+0x22>
 34e:	82 8d       	ldd	r24, Z+26	; 0x1a
 350:	df 01       	movw	r26, r30
 352:	a8 0f       	add	r26, r24
 354:	b1 1d       	adc	r27, r1
 356:	5d 96       	adiw	r26, 0x1d	; 29
 358:	8c 91       	ld	r24, X
 35a:	92 8d       	ldd	r25, Z+26	; 0x1a
 35c:	9f 5f       	subi	r25, 0xFF	; 255
 35e:	9f 73       	andi	r25, 0x3F	; 63
 360:	92 8f       	std	Z+26, r25	; 0x1a
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	08 95       	ret
 366:	8f ef       	ldi	r24, 0xFF	; 255
 368:	9f ef       	ldi	r25, 0xFF	; 255
 36a:	08 95       	ret

0000036c <_ZN14HardwareSerial17availableForWriteEv>:
 36c:	fc 01       	movw	r30, r24
 36e:	53 8d       	ldd	r21, Z+27	; 0x1b
 370:	44 8d       	ldd	r20, Z+28	; 0x1c
 372:	25 2f       	mov	r18, r21
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	84 2f       	mov	r24, r20
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	82 1b       	sub	r24, r18
 37c:	93 0b       	sbc	r25, r19
 37e:	54 17       	cp	r21, r20
 380:	10 f0       	brcs	.+4      	; 0x386 <_ZN14HardwareSerial17availableForWriteEv+0x1a>
 382:	cf 96       	adiw	r24, 0x3f	; 63
 384:	08 95       	ret
 386:	01 97       	sbiw	r24, 0x01	; 1
 388:	08 95       	ret

0000038a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
 38a:	fc 01       	movw	r30, r24
 38c:	84 8d       	ldd	r24, Z+28	; 0x1c
 38e:	df 01       	movw	r26, r30
 390:	a8 0f       	add	r26, r24
 392:	b1 1d       	adc	r27, r1
 394:	a3 5a       	subi	r26, 0xA3	; 163
 396:	bf 4f       	sbci	r27, 0xFF	; 255
 398:	2c 91       	ld	r18, X
 39a:	84 8d       	ldd	r24, Z+28	; 0x1c
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	01 96       	adiw	r24, 0x01	; 1
 3a0:	8f 73       	andi	r24, 0x3F	; 63
 3a2:	99 27       	eor	r25, r25
 3a4:	84 8f       	std	Z+28, r24	; 0x1c
 3a6:	a6 89       	ldd	r26, Z+22	; 0x16
 3a8:	b7 89       	ldd	r27, Z+23	; 0x17
 3aa:	2c 93       	st	X, r18
 3ac:	a0 89       	ldd	r26, Z+16	; 0x10
 3ae:	b1 89       	ldd	r27, Z+17	; 0x11
 3b0:	8c 91       	ld	r24, X
 3b2:	80 64       	ori	r24, 0x40	; 64
 3b4:	8c 93       	st	X, r24
 3b6:	93 8d       	ldd	r25, Z+27	; 0x1b
 3b8:	84 8d       	ldd	r24, Z+28	; 0x1c
 3ba:	98 13       	cpse	r25, r24
 3bc:	06 c0       	rjmp	.+12     	; 0x3ca <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x40>
 3be:	02 88       	ldd	r0, Z+18	; 0x12
 3c0:	f3 89       	ldd	r31, Z+19	; 0x13
 3c2:	e0 2d       	mov	r30, r0
 3c4:	80 81       	ld	r24, Z
 3c6:	8f 7d       	andi	r24, 0xDF	; 223
 3c8:	80 83       	st	Z, r24
 3ca:	08 95       	ret

000003cc <_ZN14HardwareSerial5writeEh>:
 3cc:	ef 92       	push	r14
 3ce:	ff 92       	push	r15
 3d0:	0f 93       	push	r16
 3d2:	1f 93       	push	r17
 3d4:	cf 93       	push	r28
 3d6:	df 93       	push	r29
 3d8:	ec 01       	movw	r28, r24
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	88 8f       	std	Y+24, r24	; 0x18
 3de:	9b 8d       	ldd	r25, Y+27	; 0x1b
 3e0:	8c 8d       	ldd	r24, Y+28	; 0x1c
 3e2:	98 13       	cpse	r25, r24
 3e4:	05 c0       	rjmp	.+10     	; 0x3f0 <_ZN14HardwareSerial5writeEh+0x24>
 3e6:	e8 89       	ldd	r30, Y+16	; 0x10
 3e8:	f9 89       	ldd	r31, Y+17	; 0x11
 3ea:	80 81       	ld	r24, Z
 3ec:	85 fd       	sbrc	r24, 5
 3ee:	24 c0       	rjmp	.+72     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 3f0:	f6 2e       	mov	r15, r22
 3f2:	0b 8d       	ldd	r16, Y+27	; 0x1b
 3f4:	10 e0       	ldi	r17, 0x00	; 0
 3f6:	0f 5f       	subi	r16, 0xFF	; 255
 3f8:	1f 4f       	sbci	r17, 0xFF	; 255
 3fa:	0f 73       	andi	r16, 0x3F	; 63
 3fc:	11 27       	eor	r17, r17
 3fe:	e0 2e       	mov	r14, r16
 400:	8c 8d       	ldd	r24, Y+28	; 0x1c
 402:	e8 12       	cpse	r14, r24
 404:	0c c0       	rjmp	.+24     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 406:	0f b6       	in	r0, 0x3f	; 63
 408:	07 fc       	sbrc	r0, 7
 40a:	fa cf       	rjmp	.-12     	; 0x400 <__LOCK_REGION_LENGTH__>
 40c:	e8 89       	ldd	r30, Y+16	; 0x10
 40e:	f9 89       	ldd	r31, Y+17	; 0x11
 410:	80 81       	ld	r24, Z
 412:	85 ff       	sbrs	r24, 5
 414:	f5 cf       	rjmp	.-22     	; 0x400 <__LOCK_REGION_LENGTH__>
 416:	ce 01       	movw	r24, r28
 418:	0e 94 c5 01 	call	0x38a	; 0x38a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
 41c:	f1 cf       	rjmp	.-30     	; 0x400 <__LOCK_REGION_LENGTH__>
 41e:	8b 8d       	ldd	r24, Y+27	; 0x1b
 420:	fe 01       	movw	r30, r28
 422:	e8 0f       	add	r30, r24
 424:	f1 1d       	adc	r31, r1
 426:	e3 5a       	subi	r30, 0xA3	; 163
 428:	ff 4f       	sbci	r31, 0xFF	; 255
 42a:	f0 82       	st	Z, r15
 42c:	0b 8f       	std	Y+27, r16	; 0x1b
 42e:	ea 89       	ldd	r30, Y+18	; 0x12
 430:	fb 89       	ldd	r31, Y+19	; 0x13
 432:	80 81       	ld	r24, Z
 434:	80 62       	ori	r24, 0x20	; 32
 436:	07 c0       	rjmp	.+14     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 438:	ee 89       	ldd	r30, Y+22	; 0x16
 43a:	ff 89       	ldd	r31, Y+23	; 0x17
 43c:	60 83       	st	Z, r22
 43e:	e8 89       	ldd	r30, Y+16	; 0x10
 440:	f9 89       	ldd	r31, Y+17	; 0x11
 442:	80 81       	ld	r24, Z
 444:	80 64       	ori	r24, 0x40	; 64
 446:	80 83       	st	Z, r24
 448:	81 e0       	ldi	r24, 0x01	; 1
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	df 91       	pop	r29
 44e:	cf 91       	pop	r28
 450:	1f 91       	pop	r17
 452:	0f 91       	pop	r16
 454:	ff 90       	pop	r15
 456:	ef 90       	pop	r14
 458:	08 95       	ret

0000045a <_ZN14HardwareSerial5flushEv>:
 45a:	cf 93       	push	r28
 45c:	df 93       	push	r29
 45e:	ec 01       	movw	r28, r24
 460:	88 8d       	ldd	r24, Y+24	; 0x18
 462:	88 23       	and	r24, r24
 464:	c9 f0       	breq	.+50     	; 0x498 <_ZN14HardwareSerial5flushEv+0x3e>
 466:	ea 89       	ldd	r30, Y+18	; 0x12
 468:	fb 89       	ldd	r31, Y+19	; 0x13
 46a:	80 81       	ld	r24, Z
 46c:	85 fd       	sbrc	r24, 5
 46e:	05 c0       	rjmp	.+10     	; 0x47a <_ZN14HardwareSerial5flushEv+0x20>
 470:	a8 89       	ldd	r26, Y+16	; 0x10
 472:	b9 89       	ldd	r27, Y+17	; 0x11
 474:	8c 91       	ld	r24, X
 476:	86 fd       	sbrc	r24, 6
 478:	0f c0       	rjmp	.+30     	; 0x498 <_ZN14HardwareSerial5flushEv+0x3e>
 47a:	0f b6       	in	r0, 0x3f	; 63
 47c:	07 fc       	sbrc	r0, 7
 47e:	f5 cf       	rjmp	.-22     	; 0x46a <_ZN14HardwareSerial5flushEv+0x10>
 480:	80 81       	ld	r24, Z
 482:	85 ff       	sbrs	r24, 5
 484:	f2 cf       	rjmp	.-28     	; 0x46a <_ZN14HardwareSerial5flushEv+0x10>
 486:	a8 89       	ldd	r26, Y+16	; 0x10
 488:	b9 89       	ldd	r27, Y+17	; 0x11
 48a:	8c 91       	ld	r24, X
 48c:	85 ff       	sbrs	r24, 5
 48e:	ed cf       	rjmp	.-38     	; 0x46a <_ZN14HardwareSerial5flushEv+0x10>
 490:	ce 01       	movw	r24, r28
 492:	0e 94 c5 01 	call	0x38a	; 0x38a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
 496:	e7 cf       	rjmp	.-50     	; 0x466 <_ZN14HardwareSerial5flushEv+0xc>
 498:	df 91       	pop	r29
 49a:	cf 91       	pop	r28
 49c:	08 95       	ret

0000049e <_ZN14HardwareSerial5beginEmh>:
 49e:	cf 92       	push	r12
 4a0:	df 92       	push	r13
 4a2:	ef 92       	push	r14
 4a4:	ff 92       	push	r15
 4a6:	1f 93       	push	r17
 4a8:	cf 93       	push	r28
 4aa:	df 93       	push	r29
 4ac:	ec 01       	movw	r28, r24
 4ae:	6a 01       	movw	r12, r20
 4b0:	7b 01       	movw	r14, r22
 4b2:	12 2f       	mov	r17, r18
 4b4:	e8 89       	ldd	r30, Y+16	; 0x10
 4b6:	f9 89       	ldd	r31, Y+17	; 0x11
 4b8:	82 e0       	ldi	r24, 0x02	; 2
 4ba:	80 83       	st	Z, r24
 4bc:	41 15       	cp	r20, r1
 4be:	51 4e       	sbci	r21, 0xE1	; 225
 4c0:	61 05       	cpc	r22, r1
 4c2:	71 05       	cpc	r23, r1
 4c4:	b1 f0       	breq	.+44     	; 0x4f2 <_ZN14HardwareSerial5beginEmh+0x54>
 4c6:	60 e0       	ldi	r22, 0x00	; 0
 4c8:	79 e0       	ldi	r23, 0x09	; 9
 4ca:	8d e3       	ldi	r24, 0x3D	; 61
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	a7 01       	movw	r20, r14
 4d0:	96 01       	movw	r18, r12
 4d2:	0e 94 56 04 	call	0x8ac	; 0x8ac <__udivmodsi4>
 4d6:	da 01       	movw	r26, r20
 4d8:	c9 01       	movw	r24, r18
 4da:	01 97       	sbiw	r24, 0x01	; 1
 4dc:	a1 09       	sbc	r26, r1
 4de:	b1 09       	sbc	r27, r1
 4e0:	b6 95       	lsr	r27
 4e2:	a7 95       	ror	r26
 4e4:	97 95       	ror	r25
 4e6:	87 95       	ror	r24
 4e8:	9c 01       	movw	r18, r24
 4ea:	21 15       	cp	r18, r1
 4ec:	80 e1       	ldi	r24, 0x10	; 16
 4ee:	38 07       	cpc	r19, r24
 4f0:	a8 f0       	brcs	.+42     	; 0x51c <_ZN14HardwareSerial5beginEmh+0x7e>
 4f2:	e8 89       	ldd	r30, Y+16	; 0x10
 4f4:	f9 89       	ldd	r31, Y+17	; 0x11
 4f6:	10 82       	st	Z, r1
 4f8:	60 e8       	ldi	r22, 0x80	; 128
 4fa:	74 e8       	ldi	r23, 0x84	; 132
 4fc:	8e e1       	ldi	r24, 0x1E	; 30
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	a7 01       	movw	r20, r14
 502:	96 01       	movw	r18, r12
 504:	0e 94 56 04 	call	0x8ac	; 0x8ac <__udivmodsi4>
 508:	da 01       	movw	r26, r20
 50a:	c9 01       	movw	r24, r18
 50c:	01 97       	sbiw	r24, 0x01	; 1
 50e:	a1 09       	sbc	r26, r1
 510:	b1 09       	sbc	r27, r1
 512:	b6 95       	lsr	r27
 514:	a7 95       	ror	r26
 516:	97 95       	ror	r25
 518:	87 95       	ror	r24
 51a:	9c 01       	movw	r18, r24
 51c:	ec 85       	ldd	r30, Y+12	; 0x0c
 51e:	fd 85       	ldd	r31, Y+13	; 0x0d
 520:	30 83       	st	Z, r19
 522:	ee 85       	ldd	r30, Y+14	; 0x0e
 524:	ff 85       	ldd	r31, Y+15	; 0x0f
 526:	20 83       	st	Z, r18
 528:	18 8e       	std	Y+24, r1	; 0x18
 52a:	ec 89       	ldd	r30, Y+20	; 0x14
 52c:	fd 89       	ldd	r31, Y+21	; 0x15
 52e:	10 83       	st	Z, r17
 530:	ea 89       	ldd	r30, Y+18	; 0x12
 532:	fb 89       	ldd	r31, Y+19	; 0x13
 534:	80 81       	ld	r24, Z
 536:	80 61       	ori	r24, 0x10	; 16
 538:	80 83       	st	Z, r24
 53a:	ea 89       	ldd	r30, Y+18	; 0x12
 53c:	fb 89       	ldd	r31, Y+19	; 0x13
 53e:	80 81       	ld	r24, Z
 540:	88 60       	ori	r24, 0x08	; 8
 542:	80 83       	st	Z, r24
 544:	ea 89       	ldd	r30, Y+18	; 0x12
 546:	fb 89       	ldd	r31, Y+19	; 0x13
 548:	80 81       	ld	r24, Z
 54a:	80 68       	ori	r24, 0x80	; 128
 54c:	80 83       	st	Z, r24
 54e:	ea 89       	ldd	r30, Y+18	; 0x12
 550:	fb 89       	ldd	r31, Y+19	; 0x13
 552:	80 81       	ld	r24, Z
 554:	8f 7d       	andi	r24, 0xDF	; 223
 556:	80 83       	st	Z, r24
 558:	df 91       	pop	r29
 55a:	cf 91       	pop	r28
 55c:	1f 91       	pop	r17
 55e:	ff 90       	pop	r15
 560:	ef 90       	pop	r14
 562:	df 90       	pop	r13
 564:	cf 90       	pop	r12
 566:	08 95       	ret

00000568 <__vector_18>:
 568:	1f 92       	push	r1
 56a:	0f 92       	push	r0
 56c:	0f b6       	in	r0, 0x3f	; 63
 56e:	0f 92       	push	r0
 570:	11 24       	eor	r1, r1
 572:	2f 93       	push	r18
 574:	8f 93       	push	r24
 576:	9f 93       	push	r25
 578:	ef 93       	push	r30
 57a:	ff 93       	push	r31
 57c:	e0 91 3a 01 	lds	r30, 0x013A	; 0x80013a <Serial+0x10>
 580:	f0 91 3b 01 	lds	r31, 0x013B	; 0x80013b <Serial+0x11>
 584:	80 81       	ld	r24, Z
 586:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <Serial+0x16>
 58a:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <Serial+0x17>
 58e:	82 fd       	sbrc	r24, 2
 590:	12 c0       	rjmp	.+36     	; 0x5b6 <__vector_18+0x4e>
 592:	90 81       	ld	r25, Z
 594:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <Serial+0x19>
 598:	8f 5f       	subi	r24, 0xFF	; 255
 59a:	8f 73       	andi	r24, 0x3F	; 63
 59c:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <Serial+0x1a>
 5a0:	82 17       	cp	r24, r18
 5a2:	51 f0       	breq	.+20     	; 0x5b8 <__vector_18+0x50>
 5a4:	e0 91 43 01 	lds	r30, 0x0143	; 0x800143 <Serial+0x19>
 5a8:	f0 e0       	ldi	r31, 0x00	; 0
 5aa:	e6 5d       	subi	r30, 0xD6	; 214
 5ac:	fe 4f       	sbci	r31, 0xFE	; 254
 5ae:	95 8f       	std	Z+29, r25	; 0x1d
 5b0:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <Serial+0x19>
 5b4:	01 c0       	rjmp	.+2      	; 0x5b8 <__vector_18+0x50>
 5b6:	80 81       	ld	r24, Z
 5b8:	ff 91       	pop	r31
 5ba:	ef 91       	pop	r30
 5bc:	9f 91       	pop	r25
 5be:	8f 91       	pop	r24
 5c0:	2f 91       	pop	r18
 5c2:	0f 90       	pop	r0
 5c4:	0f be       	out	0x3f, r0	; 63
 5c6:	0f 90       	pop	r0
 5c8:	1f 90       	pop	r1
 5ca:	18 95       	reti

000005cc <__vector_19>:
 5cc:	1f 92       	push	r1
 5ce:	0f 92       	push	r0
 5d0:	0f b6       	in	r0, 0x3f	; 63
 5d2:	0f 92       	push	r0
 5d4:	11 24       	eor	r1, r1
 5d6:	2f 93       	push	r18
 5d8:	3f 93       	push	r19
 5da:	4f 93       	push	r20
 5dc:	5f 93       	push	r21
 5de:	6f 93       	push	r22
 5e0:	7f 93       	push	r23
 5e2:	8f 93       	push	r24
 5e4:	9f 93       	push	r25
 5e6:	af 93       	push	r26
 5e8:	bf 93       	push	r27
 5ea:	ef 93       	push	r30
 5ec:	ff 93       	push	r31
 5ee:	8a e2       	ldi	r24, 0x2A	; 42
 5f0:	91 e0       	ldi	r25, 0x01	; 1
 5f2:	0e 94 c5 01 	call	0x38a	; 0x38a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
 5f6:	ff 91       	pop	r31
 5f8:	ef 91       	pop	r30
 5fa:	bf 91       	pop	r27
 5fc:	af 91       	pop	r26
 5fe:	9f 91       	pop	r25
 600:	8f 91       	pop	r24
 602:	7f 91       	pop	r23
 604:	6f 91       	pop	r22
 606:	5f 91       	pop	r21
 608:	4f 91       	pop	r20
 60a:	3f 91       	pop	r19
 60c:	2f 91       	pop	r18
 60e:	0f 90       	pop	r0
 610:	0f be       	out	0x3f, r0	; 63
 612:	0f 90       	pop	r0
 614:	1f 90       	pop	r1
 616:	18 95       	reti

00000618 <_GLOBAL__sub_I___vector_18>:
 618:	ea e2       	ldi	r30, 0x2A	; 42
 61a:	f1 e0       	ldi	r31, 0x01	; 1
 61c:	13 82       	std	Z+3, r1	; 0x03
 61e:	12 82       	std	Z+2, r1	; 0x02
 620:	88 ee       	ldi	r24, 0xE8	; 232
 622:	93 e0       	ldi	r25, 0x03	; 3
 624:	a0 e0       	ldi	r26, 0x00	; 0
 626:	b0 e0       	ldi	r27, 0x00	; 0
 628:	84 83       	std	Z+4, r24	; 0x04
 62a:	95 83       	std	Z+5, r25	; 0x05
 62c:	a6 83       	std	Z+6, r26	; 0x06
 62e:	b7 83       	std	Z+7, r27	; 0x07
 630:	84 e0       	ldi	r24, 0x04	; 4
 632:	91 e0       	ldi	r25, 0x01	; 1
 634:	91 83       	std	Z+1, r25	; 0x01
 636:	80 83       	st	Z, r24
 638:	85 ec       	ldi	r24, 0xC5	; 197
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	95 87       	std	Z+13, r25	; 0x0d
 63e:	84 87       	std	Z+12, r24	; 0x0c
 640:	84 ec       	ldi	r24, 0xC4	; 196
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	97 87       	std	Z+15, r25	; 0x0f
 646:	86 87       	std	Z+14, r24	; 0x0e
 648:	80 ec       	ldi	r24, 0xC0	; 192
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	91 8b       	std	Z+17, r25	; 0x11
 64e:	80 8b       	std	Z+16, r24	; 0x10
 650:	81 ec       	ldi	r24, 0xC1	; 193
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	93 8b       	std	Z+19, r25	; 0x13
 656:	82 8b       	std	Z+18, r24	; 0x12
 658:	82 ec       	ldi	r24, 0xC2	; 194
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	95 8b       	std	Z+21, r25	; 0x15
 65e:	84 8b       	std	Z+20, r24	; 0x14
 660:	86 ec       	ldi	r24, 0xC6	; 198
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	97 8b       	std	Z+23, r25	; 0x17
 666:	86 8b       	std	Z+22, r24	; 0x16
 668:	11 8e       	std	Z+25, r1	; 0x19
 66a:	12 8e       	std	Z+26, r1	; 0x1a
 66c:	13 8e       	std	Z+27, r1	; 0x1b
 66e:	14 8e       	std	Z+28, r1	; 0x1c
 670:	08 95       	ret

00000672 <_ZN5Print5writeEPKhj>:
 672:	cf 92       	push	r12
 674:	df 92       	push	r13
 676:	ef 92       	push	r14
 678:	ff 92       	push	r15
 67a:	0f 93       	push	r16
 67c:	1f 93       	push	r17
 67e:	cf 93       	push	r28
 680:	df 93       	push	r29
 682:	6c 01       	movw	r12, r24
 684:	7a 01       	movw	r14, r20
 686:	8b 01       	movw	r16, r22
 688:	c0 e0       	ldi	r28, 0x00	; 0
 68a:	d0 e0       	ldi	r29, 0x00	; 0
 68c:	ce 15       	cp	r28, r14
 68e:	df 05       	cpc	r29, r15
 690:	81 f0       	breq	.+32     	; 0x6b2 <_ZN5Print5writeEPKhj+0x40>
 692:	d8 01       	movw	r26, r16
 694:	6d 91       	ld	r22, X+
 696:	8d 01       	movw	r16, r26
 698:	d6 01       	movw	r26, r12
 69a:	ed 91       	ld	r30, X+
 69c:	fc 91       	ld	r31, X
 69e:	01 90       	ld	r0, Z+
 6a0:	f0 81       	ld	r31, Z
 6a2:	e0 2d       	mov	r30, r0
 6a4:	c6 01       	movw	r24, r12
 6a6:	09 95       	icall
 6a8:	89 2b       	or	r24, r25
 6aa:	11 f0       	breq	.+4      	; 0x6b0 <_ZN5Print5writeEPKhj+0x3e>
 6ac:	21 96       	adiw	r28, 0x01	; 1
 6ae:	ee cf       	rjmp	.-36     	; 0x68c <_ZN5Print5writeEPKhj+0x1a>
 6b0:	7e 01       	movw	r14, r28
 6b2:	c7 01       	movw	r24, r14
 6b4:	df 91       	pop	r29
 6b6:	cf 91       	pop	r28
 6b8:	1f 91       	pop	r17
 6ba:	0f 91       	pop	r16
 6bc:	ff 90       	pop	r15
 6be:	ef 90       	pop	r14
 6c0:	df 90       	pop	r13
 6c2:	cf 90       	pop	r12
 6c4:	08 95       	ret

000006c6 <__vector_16>:
 6c6:	1f 92       	push	r1
 6c8:	0f 92       	push	r0
 6ca:	0f b6       	in	r0, 0x3f	; 63
 6cc:	0f 92       	push	r0
 6ce:	11 24       	eor	r1, r1
 6d0:	2f 93       	push	r18
 6d2:	3f 93       	push	r19
 6d4:	8f 93       	push	r24
 6d6:	9f 93       	push	r25
 6d8:	af 93       	push	r26
 6da:	bf 93       	push	r27
 6dc:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <timer0_millis>
 6e0:	90 91 c9 01 	lds	r25, 0x01C9	; 0x8001c9 <timer0_millis+0x1>
 6e4:	a0 91 ca 01 	lds	r26, 0x01CA	; 0x8001ca <timer0_millis+0x2>
 6e8:	b0 91 cb 01 	lds	r27, 0x01CB	; 0x8001cb <timer0_millis+0x3>
 6ec:	30 91 c7 01 	lds	r19, 0x01C7	; 0x8001c7 <timer0_fract>
 6f0:	23 e0       	ldi	r18, 0x03	; 3
 6f2:	23 0f       	add	r18, r19
 6f4:	2d 37       	cpi	r18, 0x7D	; 125
 6f6:	20 f4       	brcc	.+8      	; 0x700 <__vector_16+0x3a>
 6f8:	01 96       	adiw	r24, 0x01	; 1
 6fa:	a1 1d       	adc	r26, r1
 6fc:	b1 1d       	adc	r27, r1
 6fe:	05 c0       	rjmp	.+10     	; 0x70a <__vector_16+0x44>
 700:	26 e8       	ldi	r18, 0x86	; 134
 702:	23 0f       	add	r18, r19
 704:	02 96       	adiw	r24, 0x02	; 2
 706:	a1 1d       	adc	r26, r1
 708:	b1 1d       	adc	r27, r1
 70a:	20 93 c7 01 	sts	0x01C7, r18	; 0x8001c7 <timer0_fract>
 70e:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <timer0_millis>
 712:	90 93 c9 01 	sts	0x01C9, r25	; 0x8001c9 <timer0_millis+0x1>
 716:	a0 93 ca 01 	sts	0x01CA, r26	; 0x8001ca <timer0_millis+0x2>
 71a:	b0 93 cb 01 	sts	0x01CB, r27	; 0x8001cb <timer0_millis+0x3>
 71e:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <timer0_overflow_count>
 722:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <timer0_overflow_count+0x1>
 726:	a0 91 ce 01 	lds	r26, 0x01CE	; 0x8001ce <timer0_overflow_count+0x2>
 72a:	b0 91 cf 01 	lds	r27, 0x01CF	; 0x8001cf <timer0_overflow_count+0x3>
 72e:	01 96       	adiw	r24, 0x01	; 1
 730:	a1 1d       	adc	r26, r1
 732:	b1 1d       	adc	r27, r1
 734:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <timer0_overflow_count>
 738:	90 93 cd 01 	sts	0x01CD, r25	; 0x8001cd <timer0_overflow_count+0x1>
 73c:	a0 93 ce 01 	sts	0x01CE, r26	; 0x8001ce <timer0_overflow_count+0x2>
 740:	b0 93 cf 01 	sts	0x01CF, r27	; 0x8001cf <timer0_overflow_count+0x3>
 744:	bf 91       	pop	r27
 746:	af 91       	pop	r26
 748:	9f 91       	pop	r25
 74a:	8f 91       	pop	r24
 74c:	3f 91       	pop	r19
 74e:	2f 91       	pop	r18
 750:	0f 90       	pop	r0
 752:	0f be       	out	0x3f, r0	; 63
 754:	0f 90       	pop	r0
 756:	1f 90       	pop	r1
 758:	18 95       	reti

0000075a <millis>:
 75a:	2f b7       	in	r18, 0x3f	; 63
 75c:	f8 94       	cli
 75e:	60 91 c8 01 	lds	r22, 0x01C8	; 0x8001c8 <timer0_millis>
 762:	70 91 c9 01 	lds	r23, 0x01C9	; 0x8001c9 <timer0_millis+0x1>
 766:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <timer0_millis+0x2>
 76a:	90 91 cb 01 	lds	r25, 0x01CB	; 0x8001cb <timer0_millis+0x3>
 76e:	2f bf       	out	0x3f, r18	; 63
 770:	08 95       	ret

00000772 <micros>:
 772:	3f b7       	in	r19, 0x3f	; 63
 774:	f8 94       	cli
 776:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <timer0_overflow_count>
 77a:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <timer0_overflow_count+0x1>
 77e:	a0 91 ce 01 	lds	r26, 0x01CE	; 0x8001ce <timer0_overflow_count+0x2>
 782:	b0 91 cf 01 	lds	r27, 0x01CF	; 0x8001cf <timer0_overflow_count+0x3>
 786:	26 b5       	in	r18, 0x26	; 38
 788:	a8 9b       	sbis	0x15, 0	; 21
 78a:	05 c0       	rjmp	.+10     	; 0x796 <micros+0x24>
 78c:	2f 3f       	cpi	r18, 0xFF	; 255
 78e:	19 f0       	breq	.+6      	; 0x796 <micros+0x24>
 790:	01 96       	adiw	r24, 0x01	; 1
 792:	a1 1d       	adc	r26, r1
 794:	b1 1d       	adc	r27, r1
 796:	3f bf       	out	0x3f, r19	; 63
 798:	ba 2f       	mov	r27, r26
 79a:	a9 2f       	mov	r26, r25
 79c:	98 2f       	mov	r25, r24
 79e:	88 27       	eor	r24, r24
 7a0:	82 0f       	add	r24, r18
 7a2:	91 1d       	adc	r25, r1
 7a4:	a1 1d       	adc	r26, r1
 7a6:	b1 1d       	adc	r27, r1
 7a8:	bc 01       	movw	r22, r24
 7aa:	cd 01       	movw	r24, r26
 7ac:	42 e0       	ldi	r20, 0x02	; 2
 7ae:	66 0f       	add	r22, r22
 7b0:	77 1f       	adc	r23, r23
 7b2:	88 1f       	adc	r24, r24
 7b4:	99 1f       	adc	r25, r25
 7b6:	4a 95       	dec	r20
 7b8:	d1 f7       	brne	.-12     	; 0x7ae <micros+0x3c>
 7ba:	08 95       	ret

000007bc <delay>:
 7bc:	8f 92       	push	r8
 7be:	9f 92       	push	r9
 7c0:	af 92       	push	r10
 7c2:	bf 92       	push	r11
 7c4:	cf 92       	push	r12
 7c6:	df 92       	push	r13
 7c8:	ef 92       	push	r14
 7ca:	ff 92       	push	r15
 7cc:	6b 01       	movw	r12, r22
 7ce:	7c 01       	movw	r14, r24
 7d0:	0e 94 b9 03 	call	0x772	; 0x772 <micros>
 7d4:	4b 01       	movw	r8, r22
 7d6:	5c 01       	movw	r10, r24
 7d8:	c1 14       	cp	r12, r1
 7da:	d1 04       	cpc	r13, r1
 7dc:	e1 04       	cpc	r14, r1
 7de:	f1 04       	cpc	r15, r1
 7e0:	01 f1       	breq	.+64     	; 0x822 <delay+0x66>
 7e2:	0e 94 55 04 	call	0x8aa	; 0x8aa <yield>
 7e6:	0e 94 b9 03 	call	0x772	; 0x772 <micros>
 7ea:	dc 01       	movw	r26, r24
 7ec:	cb 01       	movw	r24, r22
 7ee:	88 19       	sub	r24, r8
 7f0:	99 09       	sbc	r25, r9
 7f2:	aa 09       	sbc	r26, r10
 7f4:	bb 09       	sbc	r27, r11
 7f6:	88 3e       	cpi	r24, 0xE8	; 232
 7f8:	93 40       	sbci	r25, 0x03	; 3
 7fa:	a1 05       	cpc	r26, r1
 7fc:	b1 05       	cpc	r27, r1
 7fe:	60 f3       	brcs	.-40     	; 0x7d8 <delay+0x1c>
 800:	21 e0       	ldi	r18, 0x01	; 1
 802:	c2 1a       	sub	r12, r18
 804:	d1 08       	sbc	r13, r1
 806:	e1 08       	sbc	r14, r1
 808:	f1 08       	sbc	r15, r1
 80a:	88 ee       	ldi	r24, 0xE8	; 232
 80c:	88 0e       	add	r8, r24
 80e:	83 e0       	ldi	r24, 0x03	; 3
 810:	98 1e       	adc	r9, r24
 812:	a1 1c       	adc	r10, r1
 814:	b1 1c       	adc	r11, r1
 816:	c1 14       	cp	r12, r1
 818:	d1 04       	cpc	r13, r1
 81a:	e1 04       	cpc	r14, r1
 81c:	f1 04       	cpc	r15, r1
 81e:	19 f7       	brne	.-58     	; 0x7e6 <delay+0x2a>
 820:	db cf       	rjmp	.-74     	; 0x7d8 <delay+0x1c>
 822:	ff 90       	pop	r15
 824:	ef 90       	pop	r14
 826:	df 90       	pop	r13
 828:	cf 90       	pop	r12
 82a:	bf 90       	pop	r11
 82c:	af 90       	pop	r10
 82e:	9f 90       	pop	r9
 830:	8f 90       	pop	r8
 832:	08 95       	ret

00000834 <init>:
 834:	78 94       	sei
 836:	84 b5       	in	r24, 0x24	; 36
 838:	82 60       	ori	r24, 0x02	; 2
 83a:	84 bd       	out	0x24, r24	; 36
 83c:	84 b5       	in	r24, 0x24	; 36
 83e:	81 60       	ori	r24, 0x01	; 1
 840:	84 bd       	out	0x24, r24	; 36
 842:	85 b5       	in	r24, 0x25	; 37
 844:	82 60       	ori	r24, 0x02	; 2
 846:	85 bd       	out	0x25, r24	; 37
 848:	85 b5       	in	r24, 0x25	; 37
 84a:	81 60       	ori	r24, 0x01	; 1
 84c:	85 bd       	out	0x25, r24	; 37
 84e:	ee e6       	ldi	r30, 0x6E	; 110
 850:	f0 e0       	ldi	r31, 0x00	; 0
 852:	80 81       	ld	r24, Z
 854:	81 60       	ori	r24, 0x01	; 1
 856:	80 83       	st	Z, r24
 858:	e1 e8       	ldi	r30, 0x81	; 129
 85a:	f0 e0       	ldi	r31, 0x00	; 0
 85c:	10 82       	st	Z, r1
 85e:	80 81       	ld	r24, Z
 860:	82 60       	ori	r24, 0x02	; 2
 862:	80 83       	st	Z, r24
 864:	80 81       	ld	r24, Z
 866:	81 60       	ori	r24, 0x01	; 1
 868:	80 83       	st	Z, r24
 86a:	e0 e8       	ldi	r30, 0x80	; 128
 86c:	f0 e0       	ldi	r31, 0x00	; 0
 86e:	80 81       	ld	r24, Z
 870:	81 60       	ori	r24, 0x01	; 1
 872:	80 83       	st	Z, r24
 874:	e1 eb       	ldi	r30, 0xB1	; 177
 876:	f0 e0       	ldi	r31, 0x00	; 0
 878:	80 81       	ld	r24, Z
 87a:	84 60       	ori	r24, 0x04	; 4
 87c:	80 83       	st	Z, r24
 87e:	e0 eb       	ldi	r30, 0xB0	; 176
 880:	f0 e0       	ldi	r31, 0x00	; 0
 882:	80 81       	ld	r24, Z
 884:	81 60       	ori	r24, 0x01	; 1
 886:	80 83       	st	Z, r24
 888:	ea e7       	ldi	r30, 0x7A	; 122
 88a:	f0 e0       	ldi	r31, 0x00	; 0
 88c:	80 81       	ld	r24, Z
 88e:	84 60       	ori	r24, 0x04	; 4
 890:	80 83       	st	Z, r24
 892:	80 81       	ld	r24, Z
 894:	82 60       	ori	r24, 0x02	; 2
 896:	80 83       	st	Z, r24
 898:	80 81       	ld	r24, Z
 89a:	81 60       	ori	r24, 0x01	; 1
 89c:	80 83       	st	Z, r24
 89e:	80 81       	ld	r24, Z
 8a0:	80 68       	ori	r24, 0x80	; 128
 8a2:	80 83       	st	Z, r24
 8a4:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 8a8:	08 95       	ret

000008aa <yield>:
 8aa:	08 95       	ret

000008ac <__udivmodsi4>:
 8ac:	a1 e2       	ldi	r26, 0x21	; 33
 8ae:	1a 2e       	mov	r1, r26
 8b0:	aa 1b       	sub	r26, r26
 8b2:	bb 1b       	sub	r27, r27
 8b4:	fd 01       	movw	r30, r26
 8b6:	0d c0       	rjmp	.+26     	; 0x8d2 <__udivmodsi4_ep>

000008b8 <__udivmodsi4_loop>:
 8b8:	aa 1f       	adc	r26, r26
 8ba:	bb 1f       	adc	r27, r27
 8bc:	ee 1f       	adc	r30, r30
 8be:	ff 1f       	adc	r31, r31
 8c0:	a2 17       	cp	r26, r18
 8c2:	b3 07       	cpc	r27, r19
 8c4:	e4 07       	cpc	r30, r20
 8c6:	f5 07       	cpc	r31, r21
 8c8:	20 f0       	brcs	.+8      	; 0x8d2 <__udivmodsi4_ep>
 8ca:	a2 1b       	sub	r26, r18
 8cc:	b3 0b       	sbc	r27, r19
 8ce:	e4 0b       	sbc	r30, r20
 8d0:	f5 0b       	sbc	r31, r21

000008d2 <__udivmodsi4_ep>:
 8d2:	66 1f       	adc	r22, r22
 8d4:	77 1f       	adc	r23, r23
 8d6:	88 1f       	adc	r24, r24
 8d8:	99 1f       	adc	r25, r25
 8da:	1a 94       	dec	r1
 8dc:	69 f7       	brne	.-38     	; 0x8b8 <__udivmodsi4_loop>
 8de:	60 95       	com	r22
 8e0:	70 95       	com	r23
 8e2:	80 95       	com	r24
 8e4:	90 95       	com	r25
 8e6:	9b 01       	movw	r18, r22
 8e8:	ac 01       	movw	r20, r24
 8ea:	bd 01       	movw	r22, r26
 8ec:	cf 01       	movw	r24, r30
 8ee:	08 95       	ret

000008f0 <__tablejump2__>:
 8f0:	ee 0f       	add	r30, r30
 8f2:	ff 1f       	adc	r31, r31
 8f4:	05 90       	lpm	r0, Z+
 8f6:	f4 91       	lpm	r31, Z
 8f8:	e0 2d       	mov	r30, r0
 8fa:	09 94       	ijmp

000008fc <_exit>:
 8fc:	f8 94       	cli

000008fe <__stop_program>:
 8fe:	ff cf       	rjmp	.-2      	; 0x8fe <__stop_program>
