
BilgeMonitor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000960  000009f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000960  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000be  00800112  00800112  00000a06  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a06  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a38  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000288  00000000  00000000  00000a78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000071b3  00000000  00000000  00000d00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001624  00000000  00000000  00007eb3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000155f  00000000  00000000  000094d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000077c  00000000  00000000  0000aa38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002045  00000000  00000000  0000b1b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000260d  00000000  00000000  0000d1f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000258  00000000  00000000  0000f806  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__vector_11>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 93 03 	jmp	0x726	; 0x726 <__vector_16>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__vector_18>
  4c:	0c 94 16 03 	jmp	0x62c	; 0x62c <__vector_19>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__ctors_start>:
  68:	3c 03       	fmul	r19, r20

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	e0 e6       	ldi	r30, 0x60	; 96
  7e:	f9 e0       	ldi	r31, 0x09	; 9
  80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
  82:	05 90       	lpm	r0, Z+
  84:	0d 92       	st	X+, r0
  86:	a2 31       	cpi	r26, 0x12	; 18
  88:	b1 07       	cpc	r27, r17
  8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
  8c:	21 e0       	ldi	r18, 0x01	; 1
  8e:	a2 e1       	ldi	r26, 0x12	; 18
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
  94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
  96:	a0 3d       	cpi	r26, 0xD0	; 208
  98:	b2 07       	cpc	r27, r18
  9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
  9c:	10 e0       	ldi	r17, 0x00	; 0
  9e:	c5 e3       	ldi	r28, 0x35	; 53
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
  a4:	21 97       	sbiw	r28, 0x01	; 1
  a6:	fe 01       	movw	r30, r28
  a8:	0e 94 a8 04 	call	0x950	; 0x950 <__tablejump2__>
  ac:	c4 33       	cpi	r28, 0x34	; 52
  ae:	d1 07       	cpc	r29, r17
  b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
  b2:	0e 94 94 01 	call	0x328	; 0x328 <main>
  b6:	0c 94 ae 04 	jmp	0x95c	; 0x95c <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <__vector_11>:
}

uint32_t cyclicBilgeTimerDelay(uint8_t hours){
	uint32_t milliseconds = (3600000 * hours);
	return milliseconds;
}
  be:	1f 92       	push	r1
  c0:	0f 92       	push	r0
  c2:	0f b6       	in	r0, 0x3f	; 63
  c4:	0f 92       	push	r0
  c6:	11 24       	eor	r1, r1
  c8:	4f 93       	push	r20
  ca:	5f 93       	push	r21
  cc:	6f 93       	push	r22
  ce:	7f 93       	push	r23
  d0:	8f 93       	push	r24
  d2:	9f 93       	push	r25
  d4:	af 93       	push	r26
  d6:	bf 93       	push	r27
  d8:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <secondsCount>
  dc:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <secondsCount+0x1>
  e0:	a0 91 15 01 	lds	r26, 0x0115	; 0x800115 <secondsCount+0x2>
  e4:	b0 91 16 01 	lds	r27, 0x0116	; 0x800116 <secondsCount+0x3>
  e8:	01 96       	adiw	r24, 0x01	; 1
  ea:	a1 1d       	adc	r26, r1
  ec:	b1 1d       	adc	r27, r1
  ee:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <secondsCount>
  f2:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <secondsCount+0x1>
  f6:	a0 93 15 01 	sts	0x0115, r26	; 0x800115 <secondsCount+0x2>
  fa:	b0 93 16 01 	sts	0x0116, r27	; 0x800116 <secondsCount+0x3>
  fe:	40 91 13 01 	lds	r20, 0x0113	; 0x800113 <secondsCount>
 102:	50 91 14 01 	lds	r21, 0x0114	; 0x800114 <secondsCount+0x1>
 106:	60 91 15 01 	lds	r22, 0x0115	; 0x800115 <secondsCount+0x2>
 10a:	70 91 16 01 	lds	r23, 0x0116	; 0x800116 <secondsCount+0x3>
 10e:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	a0 e0       	ldi	r26, 0x00	; 0
 116:	b0 e0       	ldi	r27, 0x00	; 0
 118:	48 17       	cp	r20, r24
 11a:	59 07       	cpc	r21, r25
 11c:	6a 07       	cpc	r22, r26
 11e:	7b 07       	cpc	r23, r27
 120:	f8 f0       	brcs	.+62     	; 0x160 <__vector_11+0xa2>
 122:	54 9a       	sbi	0x0a, 4	; 10
 124:	5c 98       	cbi	0x0b, 4	; 11
 126:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <secondsCount>
 12a:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <secondsCount+0x1>
 12e:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <secondsCount+0x2>
 132:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <secondsCount+0x3>
 136:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <currentTime>
 13a:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <currentTime+0x1>
 13e:	a0 91 19 01 	lds	r26, 0x0119	; 0x800119 <currentTime+0x2>
 142:	b0 91 1a 01 	lds	r27, 0x011A	; 0x80011a <currentTime+0x3>
 146:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <bilgeEndTime>
 14a:	90 93 1c 01 	sts	0x011C, r25	; 0x80011c <bilgeEndTime+0x1>
 14e:	a0 93 1d 01 	sts	0x011D, r26	; 0x80011d <bilgeEndTime+0x2>
 152:	b0 93 1e 01 	sts	0x011E, r27	; 0x80011e <bilgeEndTime+0x3>
 156:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 15a:	8d 7f       	andi	r24, 0xFD	; 253
 15c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 160:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 164:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 168:	bf 91       	pop	r27
 16a:	af 91       	pop	r26
 16c:	9f 91       	pop	r25
 16e:	8f 91       	pop	r24
 170:	7f 91       	pop	r23
 172:	6f 91       	pop	r22
 174:	5f 91       	pop	r21
 176:	4f 91       	pop	r20
 178:	0f 90       	pop	r0
 17a:	0f be       	out	0x3f, r0	; 63
 17c:	0f 90       	pop	r0
 17e:	1f 90       	pop	r1
 180:	18 95       	reti

00000182 <_Z10readInputsv>:
 182:	89 b1       	in	r24, 0x09	; 9
 184:	82 fb       	bst	r24, 2
 186:	88 27       	eor	r24, r24
 188:	80 f9       	bld	r24, 0
 18a:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <mainFloatSwitchState>
 18e:	89 b1       	in	r24, 0x09	; 9
 190:	83 fb       	bst	r24, 3
 192:	88 27       	eor	r24, r24
 194:	80 f9       	bld	r24, 0
 196:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <highFloatSwitchState>
 19a:	83 b1       	in	r24, 0x03	; 3
 19c:	81 70       	andi	r24, 0x01	; 1
 19e:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <manualBilgeSwitchState>
 1a2:	08 95       	ret

000001a4 <_Z13bilgeOffDelayh>:

void bilgeOffDelay(uint8_t bilgeDelaySeconds){
	bilgeCountdownSeconds = bilgeDelaySeconds;
 1a4:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
	//TCNT1 = 0;					// reset timer value to 0
	sbi(TIMSK1, OCIE1A);		// ENABLE timer compare interrupt for bilge on delay
 1a8:	ef e6       	ldi	r30, 0x6F	; 111
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	80 81       	ld	r24, Z
 1ae:	82 60       	ori	r24, 0x02	; 2
 1b0:	80 83       	st	Z, r24
 1b2:	08 95       	ret

000001b4 <_Z18runBilgeCyclicallyv>:
	}
}

void runBilgeCyclically(void){
	//RUN BILGE CYCLICALLY
	if((currentTime - bilgeEndTime) > cyclicBilgeTimerDelay(2)){
 1b4:	40 91 1b 01 	lds	r20, 0x011B	; 0x80011b <bilgeEndTime>
 1b8:	50 91 1c 01 	lds	r21, 0x011C	; 0x80011c <bilgeEndTime+0x1>
 1bc:	60 91 1d 01 	lds	r22, 0x011D	; 0x80011d <bilgeEndTime+0x2>
 1c0:	70 91 1e 01 	lds	r23, 0x011E	; 0x80011e <bilgeEndTime+0x3>
 1c4:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <currentTime>
 1c8:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <currentTime+0x1>
 1cc:	a0 91 19 01 	lds	r26, 0x0119	; 0x800119 <currentTime+0x2>
 1d0:	b0 91 1a 01 	lds	r27, 0x011A	; 0x80011a <currentTime+0x3>
 1d4:	84 1b       	sub	r24, r20
 1d6:	95 0b       	sbc	r25, r21
 1d8:	a6 0b       	sbc	r26, r22
 1da:	b7 0b       	sbc	r27, r23
 1dc:	81 30       	cpi	r24, 0x01	; 1
 1de:	9d 4d       	sbci	r25, 0xDD	; 221
 1e0:	ad 46       	sbci	r26, 0x6D	; 109
 1e2:	b1 05       	cpc	r27, r1
 1e4:	28 f0       	brcs	.+10     	; 0x1f0 <_Z18runBilgeCyclicallyv+0x3c>
		BILGE_ON();
 1e6:	54 9a       	sbi	0x0a, 4	; 10
 1e8:	5c 9a       	sbi	0x0b, 4	; 11
		bilgeOffDelay(30);
 1ea:	8e e1       	ldi	r24, 0x1E	; 30
 1ec:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <_Z13bilgeOffDelayh>
 1f0:	08 95       	ret

000001f2 <_Z9runAlarmsv>:
	//TCNT1 = 0;					// reset timer value to 0
	sbi(TIMSK1, OCIE1A);		// ENABLE timer compare interrupt for bilge on delay
}

void runAlarms(void){
	if (highFloatSwitchState == ACTIVE)	{
 1f2:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <highFloatSwitchState>
 1f6:	81 11       	cpse	r24, r1
 1f8:	19 c0       	rjmp	.+50     	; 0x22c <_Z9runAlarmsv+0x3a>
		delay(50);        
 1fa:	62 e3       	ldi	r22, 0x32	; 50
 1fc:	70 e0       	ldi	r23, 0x00	; 0
 1fe:	80 e0       	ldi	r24, 0x00	; 0
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	0e 94 0e 04 	call	0x81c	; 0x81c <delay>
		while(highFloatSwitchState == ACTIVE){
 206:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <highFloatSwitchState>
			HIGH_WATER_ALARM_ON();
			BILGE_ON();
			highFloatSwitchState = READ_HIGH_WATER_FLOAT_SWITCH();
		}
		HIGH_WATER_ALARM_OFF();
 20a:	56 9a       	sbi	0x0a, 6	; 10
}

void runAlarms(void){
	if (highFloatSwitchState == ACTIVE)	{
		delay(50);        
		while(highFloatSwitchState == ACTIVE){
 20c:	81 11       	cpse	r24, r1
 20e:	0a c0       	rjmp	.+20     	; 0x224 <_Z9runAlarmsv+0x32>
			HIGH_WATER_ALARM_ON();
 210:	5e 9a       	sbi	0x0b, 6	; 11
			BILGE_ON();
 212:	54 9a       	sbi	0x0a, 4	; 10
 214:	5c 9a       	sbi	0x0b, 4	; 11
			highFloatSwitchState = READ_HIGH_WATER_FLOAT_SWITCH();
 216:	89 b1       	in	r24, 0x09	; 9
 218:	83 fb       	bst	r24, 3
 21a:	88 27       	eor	r24, r24
 21c:	80 f9       	bld	r24, 0
 21e:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <highFloatSwitchState>
 222:	f1 cf       	rjmp	.-30     	; 0x206 <_Z9runAlarmsv+0x14>
		}
		HIGH_WATER_ALARM_OFF();
 224:	5e 98       	cbi	0x0b, 6	; 11
		bilgeOffDelay(120);
 226:	88 e7       	ldi	r24, 0x78	; 120
 228:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <_Z13bilgeOffDelayh>
 22c:	08 95       	ret

0000022e <_Z16runBilgeManuallyv>:
	manualBilgeSwitchState = READ_MANUAL_BILGE_SWITCH();
}

void runBilgeManually(void){
	//RUN BILGE MANUALLY
	if(manualBilgeSwitchState == ACTIVE){
 22e:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <manualBilgeSwitchState>
 232:	81 11       	cpse	r24, r1
 234:	1c c0       	rjmp	.+56     	; 0x26e <_Z16runBilgeManuallyv+0x40>
		delay(100);									//for debounce
 236:	64 e6       	ldi	r22, 0x64	; 100
 238:	70 e0       	ldi	r23, 0x00	; 0
 23a:	80 e0       	ldi	r24, 0x00	; 0
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	0e 94 0e 04 	call	0x81c	; 0x81c <delay>
		while(manualBilgeSwitchState == ACTIVE){
 242:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <manualBilgeSwitchState>
 246:	81 11       	cpse	r24, r1
 248:	0f c0       	rjmp	.+30     	; 0x268 <_Z16runBilgeManuallyv+0x3a>
			BILGE_ON();
 24a:	54 9a       	sbi	0x0a, 4	; 10
 24c:	5c 9a       	sbi	0x0b, 4	; 11
			manualBilgeSwitchState = READ_MANUAL_BILGE_SWITCH();
 24e:	83 b1       	in	r24, 0x03	; 3
 250:	81 70       	andi	r24, 0x01	; 1
 252:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <manualBilgeSwitchState>
			highFloatSwitchState = READ_HIGH_WATER_FLOAT_SWITCH();
 256:	89 b1       	in	r24, 0x09	; 9
 258:	83 fb       	bst	r24, 3
 25a:	88 27       	eor	r24, r24
 25c:	80 f9       	bld	r24, 0
 25e:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <highFloatSwitchState>
			runAlarms();
 262:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <_Z9runAlarmsv>
 266:	ed cf       	rjmp	.-38     	; 0x242 <_Z16runBilgeManuallyv+0x14>
		}
		bilgeOffDelay(1);
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <_Z13bilgeOffDelayh>
 26e:	08 95       	ret

00000270 <_Z21runBilgeAutomaticallyv>:
	}
}

void runBilgeAutomatically(void){
	//RUN BILGE AUTOMATICALLY
	if(mainFloatSwitchState == ACTIVE){
 270:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <mainFloatSwitchState>
 274:	81 11       	cpse	r24, r1
 276:	32 c0       	rjmp	.+100    	; 0x2dc <_Z21runBilgeAutomaticallyv+0x6c>
		delay(50);									//for debounce
 278:	62 e3       	ldi	r22, 0x32	; 50
 27a:	70 e0       	ldi	r23, 0x00	; 0
 27c:	80 e0       	ldi	r24, 0x00	; 0
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	0e 94 0e 04 	call	0x81c	; 0x81c <delay>
		mainFloatSwitchTrippedTime = millis();
 284:	0e 94 dd 03 	call	0x7ba	; 0x7ba <millis>
 288:	60 93 23 01 	sts	0x0123, r22	; 0x800123 <mainFloatSwitchTrippedTime>
 28c:	70 93 24 01 	sts	0x0124, r23	; 0x800124 <mainFloatSwitchTrippedTime+0x1>
 290:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <mainFloatSwitchTrippedTime+0x2>
 294:	90 93 26 01 	sts	0x0126, r25	; 0x800126 <mainFloatSwitchTrippedTime+0x3>
		while(mainFloatSwitchState == ACTIVE){
 298:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <mainFloatSwitchState>
 29c:	81 11       	cpse	r24, r1
 29e:	1b c0       	rjmp	.+54     	; 0x2d6 <_Z21runBilgeAutomaticallyv+0x66>
			BILGE_ON();
 2a0:	54 9a       	sbi	0x0a, 4	; 10
 2a2:	5c 9a       	sbi	0x0b, 4	; 11
			mainFloatSwitchState = READ_MAIN_FLOAT_SWITCH();
 2a4:	89 b1       	in	r24, 0x09	; 9
 2a6:	82 fb       	bst	r24, 2
 2a8:	88 27       	eor	r24, r24
 2aa:	80 f9       	bld	r24, 0
 2ac:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <mainFloatSwitchState>
			mainFloatSwitchClearedTime = millis();
 2b0:	0e 94 dd 03 	call	0x7ba	; 0x7ba <millis>
 2b4:	60 93 1f 01 	sts	0x011F, r22	; 0x80011f <mainFloatSwitchClearedTime>
 2b8:	70 93 20 01 	sts	0x0120, r23	; 0x800120 <mainFloatSwitchClearedTime+0x1>
 2bc:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <mainFloatSwitchClearedTime+0x2>
 2c0:	90 93 22 01 	sts	0x0122, r25	; 0x800122 <mainFloatSwitchClearedTime+0x3>
			highFloatSwitchState = READ_HIGH_WATER_FLOAT_SWITCH();
 2c4:	89 b1       	in	r24, 0x09	; 9
 2c6:	83 fb       	bst	r24, 3
 2c8:	88 27       	eor	r24, r24
 2ca:	80 f9       	bld	r24, 0
 2cc:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <highFloatSwitchState>
			runAlarms();
 2d0:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <_Z9runAlarmsv>
 2d4:	e1 cf       	rjmp	.-62     	; 0x298 <_Z21runBilgeAutomaticallyv+0x28>
		}
		bilgeOffDelay(30);
 2d6:	8e e1       	ldi	r24, 0x1E	; 30
 2d8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <_Z13bilgeOffDelayh>
 2dc:	08 95       	ret

000002de <_Z16initializeTimersv>:
	}
}

void initializeTimers(void){
	/*SETUP TIMER FOR BILGE OFF DELAY*/
	cli();
 2de:	f8 94       	cli
	TCCR1A = 0;					// clear timer mode register 1A
 2e0:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = 0;					// clear timer mode register 1B
 2e4:	e1 e8       	ldi	r30, 0x81	; 129
 2e6:	f0 e0       	ldi	r31, 0x00	; 0
 2e8:	10 82       	st	Z, r1
	TCNT1  = 0;					// reset timer value to 0
 2ea:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 2ee:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	OCR1A = 15625;				// compare match register
 2f2:	89 e0       	ldi	r24, 0x09	; 9
 2f4:	9d e3       	ldi	r25, 0x3D	; 61
 2f6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 2fa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	sbi(TCCR1B, WGM12);			// CTC mode
 2fe:	80 81       	ld	r24, Z
 300:	88 60       	ori	r24, 0x08	; 8
 302:	80 83       	st	Z, r24
	sbi(TCCR1B, CS12);			// prescaler
 304:	80 81       	ld	r24, Z
 306:	84 60       	ori	r24, 0x04	; 4
 308:	80 83       	st	Z, r24
	cbi(TCCR1B, CS11);			// prescaler
 30a:	80 81       	ld	r24, Z
 30c:	8d 7f       	andi	r24, 0xFD	; 253
 30e:	80 83       	st	Z, r24
	sbi(TCCR1B, CS10);			// Prescaler
 310:	80 81       	ld	r24, Z
 312:	81 60       	ori	r24, 0x01	; 1
 314:	80 83       	st	Z, r24
	
	//sbi(TIMSK1, OCIE1A);		// ENABLE timer compare interrupt
	sei();
 316:	78 94       	sei
 318:	08 95       	ret

0000031a <_Z10pinsConfigv>:

}

void pinsConfig(void){
		//set main float switch pin to input pullup
		cbi(DDRD, PORTD2);
 31a:	52 98       	cbi	0x0a, 2	; 10
		sbi(PORTD,PORTD2);
 31c:	5a 9a       	sbi	0x0b, 2	; 11
		
		//set high water float switch pin to input pullup
		cbi(DDRD, PORTD3);
 31e:	53 98       	cbi	0x0a, 3	; 10
		sbi(PORTD,PORTD3);
 320:	5b 9a       	sbi	0x0b, 3	; 11
		
		//set manual bilge switch pin to input pullup
		cbi(DDRB, PORTB0);
 322:	20 98       	cbi	0x04, 0	; 4
		sbi(PORTB,PORTB0);
 324:	28 9a       	sbi	0x05, 0	; 5
 326:	08 95       	ret

00000328 <main>:
}


int main(void){ 

	init();
 328:	0e 94 4a 04 	call	0x894	; 0x894 <init>
	initializeTimers();
 32c:	0e 94 6f 01 	call	0x2de	; 0x2de <_Z16initializeTimersv>
	pinsConfig();
 330:	0e 94 8d 01 	call	0x31a	; 0x31a <_Z10pinsConfigv>
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
 334:	26 e0       	ldi	r18, 0x06	; 6
 336:	40 e0       	ldi	r20, 0x00	; 0
 338:	52 ec       	ldi	r21, 0xC2	; 194
 33a:	61 e0       	ldi	r22, 0x01	; 1
 33c:	70 e0       	ldi	r23, 0x00	; 0
 33e:	8a e2       	ldi	r24, 0x2A	; 42
 340:	91 e0       	ldi	r25, 0x01	; 1
 342:	0e 94 7f 02 	call	0x4fe	; 0x4fe <_ZN14HardwareSerial5beginEmh>
	Serial.begin(115200);
	
	while(1){

		currentTime = millis();
 346:	0e 94 dd 03 	call	0x7ba	; 0x7ba <millis>
 34a:	60 93 17 01 	sts	0x0117, r22	; 0x800117 <currentTime>
 34e:	70 93 18 01 	sts	0x0118, r23	; 0x800118 <currentTime+0x1>
 352:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <currentTime+0x2>
 356:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <currentTime+0x3>
		readInputs();
 35a:	0e 94 c1 00 	call	0x182	; 0x182 <_Z10readInputsv>
		runBilgeManually();
 35e:	0e 94 17 01 	call	0x22e	; 0x22e <_Z16runBilgeManuallyv>
		runBilgeAutomatically();
 362:	0e 94 38 01 	call	0x270	; 0x270 <_Z21runBilgeAutomaticallyv>
		runBilgeCyclically();
 366:	0e 94 da 00 	call	0x1b4	; 0x1b4 <_Z18runBilgeCyclicallyv>
		
		runAlarms();	
 36a:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <_Z9runAlarmsv>
 36e:	eb cf       	rjmp	.-42     	; 0x346 <main+0x1e>

00000370 <_ZN14HardwareSerial9availableEv>:
 370:	fc 01       	movw	r30, r24
 372:	91 8d       	ldd	r25, Z+25	; 0x19
 374:	22 8d       	ldd	r18, Z+26	; 0x1a
 376:	89 2f       	mov	r24, r25
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	80 5c       	subi	r24, 0xC0	; 192
 37c:	9f 4f       	sbci	r25, 0xFF	; 255
 37e:	82 1b       	sub	r24, r18
 380:	91 09       	sbc	r25, r1
 382:	8f 73       	andi	r24, 0x3F	; 63
 384:	99 27       	eor	r25, r25
 386:	08 95       	ret

00000388 <_ZN14HardwareSerial4peekEv>:
 388:	fc 01       	movw	r30, r24
 38a:	91 8d       	ldd	r25, Z+25	; 0x19
 38c:	82 8d       	ldd	r24, Z+26	; 0x1a
 38e:	98 17       	cp	r25, r24
 390:	31 f0       	breq	.+12     	; 0x39e <_ZN14HardwareSerial4peekEv+0x16>
 392:	82 8d       	ldd	r24, Z+26	; 0x1a
 394:	e8 0f       	add	r30, r24
 396:	f1 1d       	adc	r31, r1
 398:	85 8d       	ldd	r24, Z+29	; 0x1d
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	08 95       	ret
 39e:	8f ef       	ldi	r24, 0xFF	; 255
 3a0:	9f ef       	ldi	r25, 0xFF	; 255
 3a2:	08 95       	ret

000003a4 <_ZN14HardwareSerial4readEv>:
 3a4:	fc 01       	movw	r30, r24
 3a6:	91 8d       	ldd	r25, Z+25	; 0x19
 3a8:	82 8d       	ldd	r24, Z+26	; 0x1a
 3aa:	98 17       	cp	r25, r24
 3ac:	61 f0       	breq	.+24     	; 0x3c6 <_ZN14HardwareSerial4readEv+0x22>
 3ae:	82 8d       	ldd	r24, Z+26	; 0x1a
 3b0:	df 01       	movw	r26, r30
 3b2:	a8 0f       	add	r26, r24
 3b4:	b1 1d       	adc	r27, r1
 3b6:	5d 96       	adiw	r26, 0x1d	; 29
 3b8:	8c 91       	ld	r24, X
 3ba:	92 8d       	ldd	r25, Z+26	; 0x1a
 3bc:	9f 5f       	subi	r25, 0xFF	; 255
 3be:	9f 73       	andi	r25, 0x3F	; 63
 3c0:	92 8f       	std	Z+26, r25	; 0x1a
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	08 95       	ret
 3c6:	8f ef       	ldi	r24, 0xFF	; 255
 3c8:	9f ef       	ldi	r25, 0xFF	; 255
 3ca:	08 95       	ret

000003cc <_ZN14HardwareSerial17availableForWriteEv>:
 3cc:	fc 01       	movw	r30, r24
 3ce:	53 8d       	ldd	r21, Z+27	; 0x1b
 3d0:	44 8d       	ldd	r20, Z+28	; 0x1c
 3d2:	25 2f       	mov	r18, r21
 3d4:	30 e0       	ldi	r19, 0x00	; 0
 3d6:	84 2f       	mov	r24, r20
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	82 1b       	sub	r24, r18
 3dc:	93 0b       	sbc	r25, r19
 3de:	54 17       	cp	r21, r20
 3e0:	10 f0       	brcs	.+4      	; 0x3e6 <_ZN14HardwareSerial17availableForWriteEv+0x1a>
 3e2:	cf 96       	adiw	r24, 0x3f	; 63
 3e4:	08 95       	ret
 3e6:	01 97       	sbiw	r24, 0x01	; 1
 3e8:	08 95       	ret

000003ea <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
 3ea:	fc 01       	movw	r30, r24
 3ec:	84 8d       	ldd	r24, Z+28	; 0x1c
 3ee:	df 01       	movw	r26, r30
 3f0:	a8 0f       	add	r26, r24
 3f2:	b1 1d       	adc	r27, r1
 3f4:	a3 5a       	subi	r26, 0xA3	; 163
 3f6:	bf 4f       	sbci	r27, 0xFF	; 255
 3f8:	2c 91       	ld	r18, X
 3fa:	84 8d       	ldd	r24, Z+28	; 0x1c
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	01 96       	adiw	r24, 0x01	; 1
 400:	8f 73       	andi	r24, 0x3F	; 63
 402:	99 27       	eor	r25, r25
 404:	84 8f       	std	Z+28, r24	; 0x1c
 406:	a6 89       	ldd	r26, Z+22	; 0x16
 408:	b7 89       	ldd	r27, Z+23	; 0x17
 40a:	2c 93       	st	X, r18
 40c:	a0 89       	ldd	r26, Z+16	; 0x10
 40e:	b1 89       	ldd	r27, Z+17	; 0x11
 410:	8c 91       	ld	r24, X
 412:	80 64       	ori	r24, 0x40	; 64
 414:	8c 93       	st	X, r24
 416:	93 8d       	ldd	r25, Z+27	; 0x1b
 418:	84 8d       	ldd	r24, Z+28	; 0x1c
 41a:	98 13       	cpse	r25, r24
 41c:	06 c0       	rjmp	.+12     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41e:	02 88       	ldd	r0, Z+18	; 0x12
 420:	f3 89       	ldd	r31, Z+19	; 0x13
 422:	e0 2d       	mov	r30, r0
 424:	80 81       	ld	r24, Z
 426:	8f 7d       	andi	r24, 0xDF	; 223
 428:	80 83       	st	Z, r24
 42a:	08 95       	ret

0000042c <_ZN14HardwareSerial5writeEh>:
 42c:	ef 92       	push	r14
 42e:	ff 92       	push	r15
 430:	0f 93       	push	r16
 432:	1f 93       	push	r17
 434:	cf 93       	push	r28
 436:	df 93       	push	r29
 438:	ec 01       	movw	r28, r24
 43a:	81 e0       	ldi	r24, 0x01	; 1
 43c:	88 8f       	std	Y+24, r24	; 0x18
 43e:	9b 8d       	ldd	r25, Y+27	; 0x1b
 440:	8c 8d       	ldd	r24, Y+28	; 0x1c
 442:	98 13       	cpse	r25, r24
 444:	05 c0       	rjmp	.+10     	; 0x450 <_ZN14HardwareSerial5writeEh+0x24>
 446:	e8 89       	ldd	r30, Y+16	; 0x10
 448:	f9 89       	ldd	r31, Y+17	; 0x11
 44a:	80 81       	ld	r24, Z
 44c:	85 fd       	sbrc	r24, 5
 44e:	24 c0       	rjmp	.+72     	; 0x498 <_ZN14HardwareSerial5writeEh+0x6c>
 450:	f6 2e       	mov	r15, r22
 452:	0b 8d       	ldd	r16, Y+27	; 0x1b
 454:	10 e0       	ldi	r17, 0x00	; 0
 456:	0f 5f       	subi	r16, 0xFF	; 255
 458:	1f 4f       	sbci	r17, 0xFF	; 255
 45a:	0f 73       	andi	r16, 0x3F	; 63
 45c:	11 27       	eor	r17, r17
 45e:	e0 2e       	mov	r14, r16
 460:	8c 8d       	ldd	r24, Y+28	; 0x1c
 462:	e8 12       	cpse	r14, r24
 464:	0c c0       	rjmp	.+24     	; 0x47e <_ZN14HardwareSerial5writeEh+0x52>
 466:	0f b6       	in	r0, 0x3f	; 63
 468:	07 fc       	sbrc	r0, 7
 46a:	fa cf       	rjmp	.-12     	; 0x460 <_ZN14HardwareSerial5writeEh+0x34>
 46c:	e8 89       	ldd	r30, Y+16	; 0x10
 46e:	f9 89       	ldd	r31, Y+17	; 0x11
 470:	80 81       	ld	r24, Z
 472:	85 ff       	sbrs	r24, 5
 474:	f5 cf       	rjmp	.-22     	; 0x460 <_ZN14HardwareSerial5writeEh+0x34>
 476:	ce 01       	movw	r24, r28
 478:	0e 94 f5 01 	call	0x3ea	; 0x3ea <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
 47c:	f1 cf       	rjmp	.-30     	; 0x460 <_ZN14HardwareSerial5writeEh+0x34>
 47e:	8b 8d       	ldd	r24, Y+27	; 0x1b
 480:	fe 01       	movw	r30, r28
 482:	e8 0f       	add	r30, r24
 484:	f1 1d       	adc	r31, r1
 486:	e3 5a       	subi	r30, 0xA3	; 163
 488:	ff 4f       	sbci	r31, 0xFF	; 255
 48a:	f0 82       	st	Z, r15
 48c:	0b 8f       	std	Y+27, r16	; 0x1b
 48e:	ea 89       	ldd	r30, Y+18	; 0x12
 490:	fb 89       	ldd	r31, Y+19	; 0x13
 492:	80 81       	ld	r24, Z
 494:	80 62       	ori	r24, 0x20	; 32
 496:	07 c0       	rjmp	.+14     	; 0x4a6 <_ZN14HardwareSerial5writeEh+0x7a>
 498:	ee 89       	ldd	r30, Y+22	; 0x16
 49a:	ff 89       	ldd	r31, Y+23	; 0x17
 49c:	60 83       	st	Z, r22
 49e:	e8 89       	ldd	r30, Y+16	; 0x10
 4a0:	f9 89       	ldd	r31, Y+17	; 0x11
 4a2:	80 81       	ld	r24, Z
 4a4:	80 64       	ori	r24, 0x40	; 64
 4a6:	80 83       	st	Z, r24
 4a8:	81 e0       	ldi	r24, 0x01	; 1
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	df 91       	pop	r29
 4ae:	cf 91       	pop	r28
 4b0:	1f 91       	pop	r17
 4b2:	0f 91       	pop	r16
 4b4:	ff 90       	pop	r15
 4b6:	ef 90       	pop	r14
 4b8:	08 95       	ret

000004ba <_ZN14HardwareSerial5flushEv>:
 4ba:	cf 93       	push	r28
 4bc:	df 93       	push	r29
 4be:	ec 01       	movw	r28, r24
 4c0:	88 8d       	ldd	r24, Y+24	; 0x18
 4c2:	88 23       	and	r24, r24
 4c4:	c9 f0       	breq	.+50     	; 0x4f8 <_ZN14HardwareSerial5flushEv+0x3e>
 4c6:	ea 89       	ldd	r30, Y+18	; 0x12
 4c8:	fb 89       	ldd	r31, Y+19	; 0x13
 4ca:	80 81       	ld	r24, Z
 4cc:	85 fd       	sbrc	r24, 5
 4ce:	05 c0       	rjmp	.+10     	; 0x4da <_ZN14HardwareSerial5flushEv+0x20>
 4d0:	a8 89       	ldd	r26, Y+16	; 0x10
 4d2:	b9 89       	ldd	r27, Y+17	; 0x11
 4d4:	8c 91       	ld	r24, X
 4d6:	86 fd       	sbrc	r24, 6
 4d8:	0f c0       	rjmp	.+30     	; 0x4f8 <_ZN14HardwareSerial5flushEv+0x3e>
 4da:	0f b6       	in	r0, 0x3f	; 63
 4dc:	07 fc       	sbrc	r0, 7
 4de:	f5 cf       	rjmp	.-22     	; 0x4ca <_ZN14HardwareSerial5flushEv+0x10>
 4e0:	80 81       	ld	r24, Z
 4e2:	85 ff       	sbrs	r24, 5
 4e4:	f2 cf       	rjmp	.-28     	; 0x4ca <_ZN14HardwareSerial5flushEv+0x10>
 4e6:	a8 89       	ldd	r26, Y+16	; 0x10
 4e8:	b9 89       	ldd	r27, Y+17	; 0x11
 4ea:	8c 91       	ld	r24, X
 4ec:	85 ff       	sbrs	r24, 5
 4ee:	ed cf       	rjmp	.-38     	; 0x4ca <_ZN14HardwareSerial5flushEv+0x10>
 4f0:	ce 01       	movw	r24, r28
 4f2:	0e 94 f5 01 	call	0x3ea	; 0x3ea <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
 4f6:	e7 cf       	rjmp	.-50     	; 0x4c6 <_ZN14HardwareSerial5flushEv+0xc>
 4f8:	df 91       	pop	r29
 4fa:	cf 91       	pop	r28
 4fc:	08 95       	ret

000004fe <_ZN14HardwareSerial5beginEmh>:
 4fe:	cf 92       	push	r12
 500:	df 92       	push	r13
 502:	ef 92       	push	r14
 504:	ff 92       	push	r15
 506:	1f 93       	push	r17
 508:	cf 93       	push	r28
 50a:	df 93       	push	r29
 50c:	ec 01       	movw	r28, r24
 50e:	6a 01       	movw	r12, r20
 510:	7b 01       	movw	r14, r22
 512:	12 2f       	mov	r17, r18
 514:	e8 89       	ldd	r30, Y+16	; 0x10
 516:	f9 89       	ldd	r31, Y+17	; 0x11
 518:	82 e0       	ldi	r24, 0x02	; 2
 51a:	80 83       	st	Z, r24
 51c:	41 15       	cp	r20, r1
 51e:	51 4e       	sbci	r21, 0xE1	; 225
 520:	61 05       	cpc	r22, r1
 522:	71 05       	cpc	r23, r1
 524:	b1 f0       	breq	.+44     	; 0x552 <_ZN14HardwareSerial5beginEmh+0x54>
 526:	60 e0       	ldi	r22, 0x00	; 0
 528:	79 e0       	ldi	r23, 0x09	; 9
 52a:	8d e3       	ldi	r24, 0x3D	; 61
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	a7 01       	movw	r20, r14
 530:	96 01       	movw	r18, r12
 532:	0e 94 86 04 	call	0x90c	; 0x90c <__udivmodsi4>
 536:	da 01       	movw	r26, r20
 538:	c9 01       	movw	r24, r18
 53a:	01 97       	sbiw	r24, 0x01	; 1
 53c:	a1 09       	sbc	r26, r1
 53e:	b1 09       	sbc	r27, r1
 540:	b6 95       	lsr	r27
 542:	a7 95       	ror	r26
 544:	97 95       	ror	r25
 546:	87 95       	ror	r24
 548:	9c 01       	movw	r18, r24
 54a:	21 15       	cp	r18, r1
 54c:	80 e1       	ldi	r24, 0x10	; 16
 54e:	38 07       	cpc	r19, r24
 550:	a8 f0       	brcs	.+42     	; 0x57c <_ZN14HardwareSerial5beginEmh+0x7e>
 552:	e8 89       	ldd	r30, Y+16	; 0x10
 554:	f9 89       	ldd	r31, Y+17	; 0x11
 556:	10 82       	st	Z, r1
 558:	60 e8       	ldi	r22, 0x80	; 128
 55a:	74 e8       	ldi	r23, 0x84	; 132
 55c:	8e e1       	ldi	r24, 0x1E	; 30
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	a7 01       	movw	r20, r14
 562:	96 01       	movw	r18, r12
 564:	0e 94 86 04 	call	0x90c	; 0x90c <__udivmodsi4>
 568:	da 01       	movw	r26, r20
 56a:	c9 01       	movw	r24, r18
 56c:	01 97       	sbiw	r24, 0x01	; 1
 56e:	a1 09       	sbc	r26, r1
 570:	b1 09       	sbc	r27, r1
 572:	b6 95       	lsr	r27
 574:	a7 95       	ror	r26
 576:	97 95       	ror	r25
 578:	87 95       	ror	r24
 57a:	9c 01       	movw	r18, r24
 57c:	ec 85       	ldd	r30, Y+12	; 0x0c
 57e:	fd 85       	ldd	r31, Y+13	; 0x0d
 580:	30 83       	st	Z, r19
 582:	ee 85       	ldd	r30, Y+14	; 0x0e
 584:	ff 85       	ldd	r31, Y+15	; 0x0f
 586:	20 83       	st	Z, r18
 588:	18 8e       	std	Y+24, r1	; 0x18
 58a:	ec 89       	ldd	r30, Y+20	; 0x14
 58c:	fd 89       	ldd	r31, Y+21	; 0x15
 58e:	10 83       	st	Z, r17
 590:	ea 89       	ldd	r30, Y+18	; 0x12
 592:	fb 89       	ldd	r31, Y+19	; 0x13
 594:	80 81       	ld	r24, Z
 596:	80 61       	ori	r24, 0x10	; 16
 598:	80 83       	st	Z, r24
 59a:	ea 89       	ldd	r30, Y+18	; 0x12
 59c:	fb 89       	ldd	r31, Y+19	; 0x13
 59e:	80 81       	ld	r24, Z
 5a0:	88 60       	ori	r24, 0x08	; 8
 5a2:	80 83       	st	Z, r24
 5a4:	ea 89       	ldd	r30, Y+18	; 0x12
 5a6:	fb 89       	ldd	r31, Y+19	; 0x13
 5a8:	80 81       	ld	r24, Z
 5aa:	80 68       	ori	r24, 0x80	; 128
 5ac:	80 83       	st	Z, r24
 5ae:	ea 89       	ldd	r30, Y+18	; 0x12
 5b0:	fb 89       	ldd	r31, Y+19	; 0x13
 5b2:	80 81       	ld	r24, Z
 5b4:	8f 7d       	andi	r24, 0xDF	; 223
 5b6:	80 83       	st	Z, r24
 5b8:	df 91       	pop	r29
 5ba:	cf 91       	pop	r28
 5bc:	1f 91       	pop	r17
 5be:	ff 90       	pop	r15
 5c0:	ef 90       	pop	r14
 5c2:	df 90       	pop	r13
 5c4:	cf 90       	pop	r12
 5c6:	08 95       	ret

000005c8 <__vector_18>:
 5c8:	1f 92       	push	r1
 5ca:	0f 92       	push	r0
 5cc:	0f b6       	in	r0, 0x3f	; 63
 5ce:	0f 92       	push	r0
 5d0:	11 24       	eor	r1, r1
 5d2:	2f 93       	push	r18
 5d4:	8f 93       	push	r24
 5d6:	9f 93       	push	r25
 5d8:	ef 93       	push	r30
 5da:	ff 93       	push	r31
 5dc:	e0 91 3a 01 	lds	r30, 0x013A	; 0x80013a <Serial+0x10>
 5e0:	f0 91 3b 01 	lds	r31, 0x013B	; 0x80013b <Serial+0x11>
 5e4:	80 81       	ld	r24, Z
 5e6:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <Serial+0x16>
 5ea:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <Serial+0x17>
 5ee:	82 fd       	sbrc	r24, 2
 5f0:	12 c0       	rjmp	.+36     	; 0x616 <__vector_18+0x4e>
 5f2:	90 81       	ld	r25, Z
 5f4:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <Serial+0x19>
 5f8:	8f 5f       	subi	r24, 0xFF	; 255
 5fa:	8f 73       	andi	r24, 0x3F	; 63
 5fc:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <Serial+0x1a>
 600:	82 17       	cp	r24, r18
 602:	51 f0       	breq	.+20     	; 0x618 <__vector_18+0x50>
 604:	e0 91 43 01 	lds	r30, 0x0143	; 0x800143 <Serial+0x19>
 608:	f0 e0       	ldi	r31, 0x00	; 0
 60a:	e6 5d       	subi	r30, 0xD6	; 214
 60c:	fe 4f       	sbci	r31, 0xFE	; 254
 60e:	95 8f       	std	Z+29, r25	; 0x1d
 610:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <Serial+0x19>
 614:	01 c0       	rjmp	.+2      	; 0x618 <__vector_18+0x50>
 616:	80 81       	ld	r24, Z
 618:	ff 91       	pop	r31
 61a:	ef 91       	pop	r30
 61c:	9f 91       	pop	r25
 61e:	8f 91       	pop	r24
 620:	2f 91       	pop	r18
 622:	0f 90       	pop	r0
 624:	0f be       	out	0x3f, r0	; 63
 626:	0f 90       	pop	r0
 628:	1f 90       	pop	r1
 62a:	18 95       	reti

0000062c <__vector_19>:
 62c:	1f 92       	push	r1
 62e:	0f 92       	push	r0
 630:	0f b6       	in	r0, 0x3f	; 63
 632:	0f 92       	push	r0
 634:	11 24       	eor	r1, r1
 636:	2f 93       	push	r18
 638:	3f 93       	push	r19
 63a:	4f 93       	push	r20
 63c:	5f 93       	push	r21
 63e:	6f 93       	push	r22
 640:	7f 93       	push	r23
 642:	8f 93       	push	r24
 644:	9f 93       	push	r25
 646:	af 93       	push	r26
 648:	bf 93       	push	r27
 64a:	ef 93       	push	r30
 64c:	ff 93       	push	r31
 64e:	8a e2       	ldi	r24, 0x2A	; 42
 650:	91 e0       	ldi	r25, 0x01	; 1
 652:	0e 94 f5 01 	call	0x3ea	; 0x3ea <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
 656:	ff 91       	pop	r31
 658:	ef 91       	pop	r30
 65a:	bf 91       	pop	r27
 65c:	af 91       	pop	r26
 65e:	9f 91       	pop	r25
 660:	8f 91       	pop	r24
 662:	7f 91       	pop	r23
 664:	6f 91       	pop	r22
 666:	5f 91       	pop	r21
 668:	4f 91       	pop	r20
 66a:	3f 91       	pop	r19
 66c:	2f 91       	pop	r18
 66e:	0f 90       	pop	r0
 670:	0f be       	out	0x3f, r0	; 63
 672:	0f 90       	pop	r0
 674:	1f 90       	pop	r1
 676:	18 95       	reti

00000678 <_GLOBAL__sub_I___vector_18>:
 678:	ea e2       	ldi	r30, 0x2A	; 42
 67a:	f1 e0       	ldi	r31, 0x01	; 1
 67c:	13 82       	std	Z+3, r1	; 0x03
 67e:	12 82       	std	Z+2, r1	; 0x02
 680:	88 ee       	ldi	r24, 0xE8	; 232
 682:	93 e0       	ldi	r25, 0x03	; 3
 684:	a0 e0       	ldi	r26, 0x00	; 0
 686:	b0 e0       	ldi	r27, 0x00	; 0
 688:	84 83       	std	Z+4, r24	; 0x04
 68a:	95 83       	std	Z+5, r25	; 0x05
 68c:	a6 83       	std	Z+6, r26	; 0x06
 68e:	b7 83       	std	Z+7, r27	; 0x07
 690:	84 e0       	ldi	r24, 0x04	; 4
 692:	91 e0       	ldi	r25, 0x01	; 1
 694:	91 83       	std	Z+1, r25	; 0x01
 696:	80 83       	st	Z, r24
 698:	85 ec       	ldi	r24, 0xC5	; 197
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	95 87       	std	Z+13, r25	; 0x0d
 69e:	84 87       	std	Z+12, r24	; 0x0c
 6a0:	84 ec       	ldi	r24, 0xC4	; 196
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	97 87       	std	Z+15, r25	; 0x0f
 6a6:	86 87       	std	Z+14, r24	; 0x0e
 6a8:	80 ec       	ldi	r24, 0xC0	; 192
 6aa:	90 e0       	ldi	r25, 0x00	; 0
 6ac:	91 8b       	std	Z+17, r25	; 0x11
 6ae:	80 8b       	std	Z+16, r24	; 0x10
 6b0:	81 ec       	ldi	r24, 0xC1	; 193
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	93 8b       	std	Z+19, r25	; 0x13
 6b6:	82 8b       	std	Z+18, r24	; 0x12
 6b8:	82 ec       	ldi	r24, 0xC2	; 194
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	95 8b       	std	Z+21, r25	; 0x15
 6be:	84 8b       	std	Z+20, r24	; 0x14
 6c0:	86 ec       	ldi	r24, 0xC6	; 198
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	97 8b       	std	Z+23, r25	; 0x17
 6c6:	86 8b       	std	Z+22, r24	; 0x16
 6c8:	11 8e       	std	Z+25, r1	; 0x19
 6ca:	12 8e       	std	Z+26, r1	; 0x1a
 6cc:	13 8e       	std	Z+27, r1	; 0x1b
 6ce:	14 8e       	std	Z+28, r1	; 0x1c
 6d0:	08 95       	ret

000006d2 <_ZN5Print5writeEPKhj>:
 6d2:	cf 92       	push	r12
 6d4:	df 92       	push	r13
 6d6:	ef 92       	push	r14
 6d8:	ff 92       	push	r15
 6da:	0f 93       	push	r16
 6dc:	1f 93       	push	r17
 6de:	cf 93       	push	r28
 6e0:	df 93       	push	r29
 6e2:	6c 01       	movw	r12, r24
 6e4:	7a 01       	movw	r14, r20
 6e6:	8b 01       	movw	r16, r22
 6e8:	c0 e0       	ldi	r28, 0x00	; 0
 6ea:	d0 e0       	ldi	r29, 0x00	; 0
 6ec:	ce 15       	cp	r28, r14
 6ee:	df 05       	cpc	r29, r15
 6f0:	81 f0       	breq	.+32     	; 0x712 <_ZN5Print5writeEPKhj+0x40>
 6f2:	d8 01       	movw	r26, r16
 6f4:	6d 91       	ld	r22, X+
 6f6:	8d 01       	movw	r16, r26
 6f8:	d6 01       	movw	r26, r12
 6fa:	ed 91       	ld	r30, X+
 6fc:	fc 91       	ld	r31, X
 6fe:	01 90       	ld	r0, Z+
 700:	f0 81       	ld	r31, Z
 702:	e0 2d       	mov	r30, r0
 704:	c6 01       	movw	r24, r12
 706:	09 95       	icall
 708:	89 2b       	or	r24, r25
 70a:	11 f0       	breq	.+4      	; 0x710 <_ZN5Print5writeEPKhj+0x3e>
 70c:	21 96       	adiw	r28, 0x01	; 1
 70e:	ee cf       	rjmp	.-36     	; 0x6ec <_ZN5Print5writeEPKhj+0x1a>
 710:	7e 01       	movw	r14, r28
 712:	c7 01       	movw	r24, r14
 714:	df 91       	pop	r29
 716:	cf 91       	pop	r28
 718:	1f 91       	pop	r17
 71a:	0f 91       	pop	r16
 71c:	ff 90       	pop	r15
 71e:	ef 90       	pop	r14
 720:	df 90       	pop	r13
 722:	cf 90       	pop	r12
 724:	08 95       	ret

00000726 <__vector_16>:
 726:	1f 92       	push	r1
 728:	0f 92       	push	r0
 72a:	0f b6       	in	r0, 0x3f	; 63
 72c:	0f 92       	push	r0
 72e:	11 24       	eor	r1, r1
 730:	2f 93       	push	r18
 732:	3f 93       	push	r19
 734:	8f 93       	push	r24
 736:	9f 93       	push	r25
 738:	af 93       	push	r26
 73a:	bf 93       	push	r27
 73c:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <timer0_millis>
 740:	90 91 c9 01 	lds	r25, 0x01C9	; 0x8001c9 <timer0_millis+0x1>
 744:	a0 91 ca 01 	lds	r26, 0x01CA	; 0x8001ca <timer0_millis+0x2>
 748:	b0 91 cb 01 	lds	r27, 0x01CB	; 0x8001cb <timer0_millis+0x3>
 74c:	30 91 c7 01 	lds	r19, 0x01C7	; 0x8001c7 <timer0_fract>
 750:	23 e0       	ldi	r18, 0x03	; 3
 752:	23 0f       	add	r18, r19
 754:	2d 37       	cpi	r18, 0x7D	; 125
 756:	20 f4       	brcc	.+8      	; 0x760 <__vector_16+0x3a>
 758:	01 96       	adiw	r24, 0x01	; 1
 75a:	a1 1d       	adc	r26, r1
 75c:	b1 1d       	adc	r27, r1
 75e:	05 c0       	rjmp	.+10     	; 0x76a <__vector_16+0x44>
 760:	26 e8       	ldi	r18, 0x86	; 134
 762:	23 0f       	add	r18, r19
 764:	02 96       	adiw	r24, 0x02	; 2
 766:	a1 1d       	adc	r26, r1
 768:	b1 1d       	adc	r27, r1
 76a:	20 93 c7 01 	sts	0x01C7, r18	; 0x8001c7 <timer0_fract>
 76e:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <timer0_millis>
 772:	90 93 c9 01 	sts	0x01C9, r25	; 0x8001c9 <timer0_millis+0x1>
 776:	a0 93 ca 01 	sts	0x01CA, r26	; 0x8001ca <timer0_millis+0x2>
 77a:	b0 93 cb 01 	sts	0x01CB, r27	; 0x8001cb <timer0_millis+0x3>
 77e:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <timer0_overflow_count>
 782:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <timer0_overflow_count+0x1>
 786:	a0 91 ce 01 	lds	r26, 0x01CE	; 0x8001ce <timer0_overflow_count+0x2>
 78a:	b0 91 cf 01 	lds	r27, 0x01CF	; 0x8001cf <timer0_overflow_count+0x3>
 78e:	01 96       	adiw	r24, 0x01	; 1
 790:	a1 1d       	adc	r26, r1
 792:	b1 1d       	adc	r27, r1
 794:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <timer0_overflow_count>
 798:	90 93 cd 01 	sts	0x01CD, r25	; 0x8001cd <timer0_overflow_count+0x1>
 79c:	a0 93 ce 01 	sts	0x01CE, r26	; 0x8001ce <timer0_overflow_count+0x2>
 7a0:	b0 93 cf 01 	sts	0x01CF, r27	; 0x8001cf <timer0_overflow_count+0x3>
 7a4:	bf 91       	pop	r27
 7a6:	af 91       	pop	r26
 7a8:	9f 91       	pop	r25
 7aa:	8f 91       	pop	r24
 7ac:	3f 91       	pop	r19
 7ae:	2f 91       	pop	r18
 7b0:	0f 90       	pop	r0
 7b2:	0f be       	out	0x3f, r0	; 63
 7b4:	0f 90       	pop	r0
 7b6:	1f 90       	pop	r1
 7b8:	18 95       	reti

000007ba <millis>:
 7ba:	2f b7       	in	r18, 0x3f	; 63
 7bc:	f8 94       	cli
 7be:	60 91 c8 01 	lds	r22, 0x01C8	; 0x8001c8 <timer0_millis>
 7c2:	70 91 c9 01 	lds	r23, 0x01C9	; 0x8001c9 <timer0_millis+0x1>
 7c6:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <timer0_millis+0x2>
 7ca:	90 91 cb 01 	lds	r25, 0x01CB	; 0x8001cb <timer0_millis+0x3>
 7ce:	2f bf       	out	0x3f, r18	; 63
 7d0:	08 95       	ret

000007d2 <micros>:
 7d2:	3f b7       	in	r19, 0x3f	; 63
 7d4:	f8 94       	cli
 7d6:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <timer0_overflow_count>
 7da:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <timer0_overflow_count+0x1>
 7de:	a0 91 ce 01 	lds	r26, 0x01CE	; 0x8001ce <timer0_overflow_count+0x2>
 7e2:	b0 91 cf 01 	lds	r27, 0x01CF	; 0x8001cf <timer0_overflow_count+0x3>
 7e6:	26 b5       	in	r18, 0x26	; 38
 7e8:	a8 9b       	sbis	0x15, 0	; 21
 7ea:	05 c0       	rjmp	.+10     	; 0x7f6 <micros+0x24>
 7ec:	2f 3f       	cpi	r18, 0xFF	; 255
 7ee:	19 f0       	breq	.+6      	; 0x7f6 <micros+0x24>
 7f0:	01 96       	adiw	r24, 0x01	; 1
 7f2:	a1 1d       	adc	r26, r1
 7f4:	b1 1d       	adc	r27, r1
 7f6:	3f bf       	out	0x3f, r19	; 63
 7f8:	ba 2f       	mov	r27, r26
 7fa:	a9 2f       	mov	r26, r25
 7fc:	98 2f       	mov	r25, r24
 7fe:	88 27       	eor	r24, r24
 800:	82 0f       	add	r24, r18
 802:	91 1d       	adc	r25, r1
 804:	a1 1d       	adc	r26, r1
 806:	b1 1d       	adc	r27, r1
 808:	bc 01       	movw	r22, r24
 80a:	cd 01       	movw	r24, r26
 80c:	42 e0       	ldi	r20, 0x02	; 2
 80e:	66 0f       	add	r22, r22
 810:	77 1f       	adc	r23, r23
 812:	88 1f       	adc	r24, r24
 814:	99 1f       	adc	r25, r25
 816:	4a 95       	dec	r20
 818:	d1 f7       	brne	.-12     	; 0x80e <micros+0x3c>
 81a:	08 95       	ret

0000081c <delay>:
 81c:	8f 92       	push	r8
 81e:	9f 92       	push	r9
 820:	af 92       	push	r10
 822:	bf 92       	push	r11
 824:	cf 92       	push	r12
 826:	df 92       	push	r13
 828:	ef 92       	push	r14
 82a:	ff 92       	push	r15
 82c:	6b 01       	movw	r12, r22
 82e:	7c 01       	movw	r14, r24
 830:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <micros>
 834:	4b 01       	movw	r8, r22
 836:	5c 01       	movw	r10, r24
 838:	c1 14       	cp	r12, r1
 83a:	d1 04       	cpc	r13, r1
 83c:	e1 04       	cpc	r14, r1
 83e:	f1 04       	cpc	r15, r1
 840:	01 f1       	breq	.+64     	; 0x882 <delay+0x66>
 842:	0e 94 85 04 	call	0x90a	; 0x90a <yield>
 846:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <micros>
 84a:	dc 01       	movw	r26, r24
 84c:	cb 01       	movw	r24, r22
 84e:	88 19       	sub	r24, r8
 850:	99 09       	sbc	r25, r9
 852:	aa 09       	sbc	r26, r10
 854:	bb 09       	sbc	r27, r11
 856:	88 3e       	cpi	r24, 0xE8	; 232
 858:	93 40       	sbci	r25, 0x03	; 3
 85a:	a1 05       	cpc	r26, r1
 85c:	b1 05       	cpc	r27, r1
 85e:	60 f3       	brcs	.-40     	; 0x838 <delay+0x1c>
 860:	21 e0       	ldi	r18, 0x01	; 1
 862:	c2 1a       	sub	r12, r18
 864:	d1 08       	sbc	r13, r1
 866:	e1 08       	sbc	r14, r1
 868:	f1 08       	sbc	r15, r1
 86a:	88 ee       	ldi	r24, 0xE8	; 232
 86c:	88 0e       	add	r8, r24
 86e:	83 e0       	ldi	r24, 0x03	; 3
 870:	98 1e       	adc	r9, r24
 872:	a1 1c       	adc	r10, r1
 874:	b1 1c       	adc	r11, r1
 876:	c1 14       	cp	r12, r1
 878:	d1 04       	cpc	r13, r1
 87a:	e1 04       	cpc	r14, r1
 87c:	f1 04       	cpc	r15, r1
 87e:	19 f7       	brne	.-58     	; 0x846 <delay+0x2a>
 880:	db cf       	rjmp	.-74     	; 0x838 <delay+0x1c>
 882:	ff 90       	pop	r15
 884:	ef 90       	pop	r14
 886:	df 90       	pop	r13
 888:	cf 90       	pop	r12
 88a:	bf 90       	pop	r11
 88c:	af 90       	pop	r10
 88e:	9f 90       	pop	r9
 890:	8f 90       	pop	r8
 892:	08 95       	ret

00000894 <init>:
 894:	78 94       	sei
 896:	84 b5       	in	r24, 0x24	; 36
 898:	82 60       	ori	r24, 0x02	; 2
 89a:	84 bd       	out	0x24, r24	; 36
 89c:	84 b5       	in	r24, 0x24	; 36
 89e:	81 60       	ori	r24, 0x01	; 1
 8a0:	84 bd       	out	0x24, r24	; 36
 8a2:	85 b5       	in	r24, 0x25	; 37
 8a4:	82 60       	ori	r24, 0x02	; 2
 8a6:	85 bd       	out	0x25, r24	; 37
 8a8:	85 b5       	in	r24, 0x25	; 37
 8aa:	81 60       	ori	r24, 0x01	; 1
 8ac:	85 bd       	out	0x25, r24	; 37
 8ae:	ee e6       	ldi	r30, 0x6E	; 110
 8b0:	f0 e0       	ldi	r31, 0x00	; 0
 8b2:	80 81       	ld	r24, Z
 8b4:	81 60       	ori	r24, 0x01	; 1
 8b6:	80 83       	st	Z, r24
 8b8:	e1 e8       	ldi	r30, 0x81	; 129
 8ba:	f0 e0       	ldi	r31, 0x00	; 0
 8bc:	10 82       	st	Z, r1
 8be:	80 81       	ld	r24, Z
 8c0:	82 60       	ori	r24, 0x02	; 2
 8c2:	80 83       	st	Z, r24
 8c4:	80 81       	ld	r24, Z
 8c6:	81 60       	ori	r24, 0x01	; 1
 8c8:	80 83       	st	Z, r24
 8ca:	e0 e8       	ldi	r30, 0x80	; 128
 8cc:	f0 e0       	ldi	r31, 0x00	; 0
 8ce:	80 81       	ld	r24, Z
 8d0:	81 60       	ori	r24, 0x01	; 1
 8d2:	80 83       	st	Z, r24
 8d4:	e1 eb       	ldi	r30, 0xB1	; 177
 8d6:	f0 e0       	ldi	r31, 0x00	; 0
 8d8:	80 81       	ld	r24, Z
 8da:	84 60       	ori	r24, 0x04	; 4
 8dc:	80 83       	st	Z, r24
 8de:	e0 eb       	ldi	r30, 0xB0	; 176
 8e0:	f0 e0       	ldi	r31, 0x00	; 0
 8e2:	80 81       	ld	r24, Z
 8e4:	81 60       	ori	r24, 0x01	; 1
 8e6:	80 83       	st	Z, r24
 8e8:	ea e7       	ldi	r30, 0x7A	; 122
 8ea:	f0 e0       	ldi	r31, 0x00	; 0
 8ec:	80 81       	ld	r24, Z
 8ee:	84 60       	ori	r24, 0x04	; 4
 8f0:	80 83       	st	Z, r24
 8f2:	80 81       	ld	r24, Z
 8f4:	82 60       	ori	r24, 0x02	; 2
 8f6:	80 83       	st	Z, r24
 8f8:	80 81       	ld	r24, Z
 8fa:	81 60       	ori	r24, 0x01	; 1
 8fc:	80 83       	st	Z, r24
 8fe:	80 81       	ld	r24, Z
 900:	80 68       	ori	r24, 0x80	; 128
 902:	80 83       	st	Z, r24
 904:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 908:	08 95       	ret

0000090a <yield>:
 90a:	08 95       	ret

0000090c <__udivmodsi4>:
 90c:	a1 e2       	ldi	r26, 0x21	; 33
 90e:	1a 2e       	mov	r1, r26
 910:	aa 1b       	sub	r26, r26
 912:	bb 1b       	sub	r27, r27
 914:	fd 01       	movw	r30, r26
 916:	0d c0       	rjmp	.+26     	; 0x932 <__udivmodsi4_ep>

00000918 <__udivmodsi4_loop>:
 918:	aa 1f       	adc	r26, r26
 91a:	bb 1f       	adc	r27, r27
 91c:	ee 1f       	adc	r30, r30
 91e:	ff 1f       	adc	r31, r31
 920:	a2 17       	cp	r26, r18
 922:	b3 07       	cpc	r27, r19
 924:	e4 07       	cpc	r30, r20
 926:	f5 07       	cpc	r31, r21
 928:	20 f0       	brcs	.+8      	; 0x932 <__udivmodsi4_ep>
 92a:	a2 1b       	sub	r26, r18
 92c:	b3 0b       	sbc	r27, r19
 92e:	e4 0b       	sbc	r30, r20
 930:	f5 0b       	sbc	r31, r21

00000932 <__udivmodsi4_ep>:
 932:	66 1f       	adc	r22, r22
 934:	77 1f       	adc	r23, r23
 936:	88 1f       	adc	r24, r24
 938:	99 1f       	adc	r25, r25
 93a:	1a 94       	dec	r1
 93c:	69 f7       	brne	.-38     	; 0x918 <__udivmodsi4_loop>
 93e:	60 95       	com	r22
 940:	70 95       	com	r23
 942:	80 95       	com	r24
 944:	90 95       	com	r25
 946:	9b 01       	movw	r18, r22
 948:	ac 01       	movw	r20, r24
 94a:	bd 01       	movw	r22, r26
 94c:	cf 01       	movw	r24, r30
 94e:	08 95       	ret

00000950 <__tablejump2__>:
 950:	ee 0f       	add	r30, r30
 952:	ff 1f       	adc	r31, r31
 954:	05 90       	lpm	r0, Z+
 956:	f4 91       	lpm	r31, Z
 958:	e0 2d       	mov	r30, r0
 95a:	09 94       	ijmp

0000095c <_exit>:
 95c:	f8 94       	cli

0000095e <__stop_program>:
 95e:	ff cf       	rjmp	.-2      	; 0x95e <__stop_program>
